table_list [u'LINEITEM']
table_list [u'PART']
table_list [u'LINEITEM']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TOUTER L_PARTKEY
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TINNER LP
[u'LP', u'LQ']
TOUTER L_QUANTITY
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TINNER LQ
[u'LP', u'LQ']
TOUTER L_PARTKEY
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TINNER LP
[u'LP', u'LQ']
TOUTER L_QUANTITY
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TINNER LQ
[u'LP', u'LQ']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
groupby, predicate
<ast.SelectListParser instance at 0xb752b50c>
JoinNode, predicate
self AND
para_list EQ
self EQ
TOUTER.L_PARTKEY
[u'TOUTER']
tmp_flag is true
TINNER.LP
[u'TOUTER']
exp_flag is  False remove_flag is  True
tmp_exp None
para_list LT
self LT
TOUTER.L_QUANTITY
[u'TOUTER']
tmp_flag is true
TINNER.LQ
[u'TOUTER']
exp_flag is  False remove_flag is  True
tmp_exp None
self AND
para_list EQ
self EQ
TOUTER.L_PARTKEY
[u'TINNER']
TINNER.LP
[u'TINNER']
tmp_flag is true
exp_flag is  False remove_flag is  True
tmp_exp None
para_list LT
self LT
TOUTER.L_QUANTITY
[u'TINNER']
TINNER.LQ
[u'TINNER']
tmp_flag is true
exp_flag is  False remove_flag is  True
tmp_exp None
AND(EQ(TOUTER.L_PARTKEY,TINNER.LP),LT(TOUTER.L_QUANTITY,TINNER.LQ)) None None PREDICATE_PUSHDOWN
REMOVE PARA
EQ(TOUTER.L_PARTKEY,TINNER.LP)
AND(EQ(TOUTER.L_PARTKEY,TINNER.LP),LT(TOUTER.L_QUANTITY,TINNER.LQ))
join_exp not none: EQ(TOUTER.L_PARTKEY,TINNER.LP)
exp: AND(LT(TOUTER.L_QUANTITY,TINNER.LQ))
spnode, predicate
JoinNode, predicate
self AND
para_list EQ
self EQ
PART.P_PARTKEY
[u'LINEITEM']
LINEITEM.L_PARTKEY
[u'LINEITEM']
tmp_flag is true
exp_flag is  False remove_flag is  True
tmp_exp None
para_list EQ
self EQ
PART.P_BRAND
[u'LINEITEM']
"BRAND#34"
exp_flag is  False remove_flag is  True
tmp_exp None
para_list EQ
self EQ
PART.P_CONTAINER
[u'LINEITEM']
"MED PACK"
exp_flag is  False remove_flag is  True
tmp_exp None
self AND
para_list EQ
self EQ
PART.P_PARTKEY
[u'PART']
tmp_flag is true
LINEITEM.L_PARTKEY
[u'PART']
exp_flag is  False remove_flag is  True
tmp_exp None
para_list EQ
self EQ
PART.P_BRAND
[u'PART']
tmp_flag is true
"BRAND#34"
exp_flag is  True remove_flag is  True
REMOVE PARA
EQ(PART.P_BRAND,"BRAND#34")
AND(EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY),EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
tmp_exp <expression.Function instance at 0x8cc362c>
para_list EQ
self EQ
PART.P_CONTAINER
[u'PART']
tmp_flag is true
"MED PACK"
exp_flag is  True remove_flag is  True
REMOVE PARA
EQ(PART.P_CONTAINER,"MED PACK")
AND(EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY),EQ(PART.P_CONTAINER,"MED PACK"))
tmp_exp <expression.Function instance at 0x8cc332c>
REMOVE PARA
EQ(PART.P_BRAND,"BRAND#34")
AND(EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY),EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
REMOVE PARA
EQ(PART.P_CONTAINER,"MED PACK")
AND(EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY),EQ(PART.P_CONTAINER,"MED PACK"))
AND(EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY)) None <expression.Function instance at 0x8cc35ec> PREDICATE_PUSHDOWN
REMOVE PARA
EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY)
AND(EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY))
join_exp not none: EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY)
exp: AND()
spnode, predicate
spnode, predicate
spnode, predicate
groupby, predicate
<ast.SelectListParser instance at 0x8cb9b4c>
spnode, predicate
groupby filter
child columnfilter: 1
child columnfilter: TOUTER.L_EXTENDEDPRICE
[u'TOUTER'] {}
TOUTER.L_EXTENDEDPRICE
add to select list:
TOUTER.L_EXTENDEDPRICE
TOUTER.L_QUANTITY
TOUTER.L_PARTKEY
table_alias TOUTER
<schema.TableSchema instance at 0xb746d08c>
new_list
TOUTER.L_PARTKEY
TOUTER.L_QUANTITY
TOUTER.L_EXTENDEDPRICE
child columnfilter: 1
child columnfilter: TOUTER.L_EXTENDEDPRICE
[u'TINNER'] {}
add to select list:
TINNER.LQ
TINNER.LP
table_alias TINNER
<schema.TableSchema instance at 0x8cbccec>
new_list
TINNER.LP
TINNER.LQ
22222sp column filter
LINEITEM.L_PARTKEY
LINEITEM.L_QUANTITY
LINEITEM.L_EXTENDEDPRICE
child columnfilter: LINEITEM.L_PARTKEY
[u'LINEITEM'] {}
child columnfilter: LINEITEM.L_QUANTITY
[u'LINEITEM'] {}
child columnfilter: LINEITEM.L_EXTENDEDPRICE
[u'LINEITEM'] {}
LINEITEM.L_PARTKEY
LINEITEM.L_QUANTITY
LINEITEM.L_EXTENDEDPRICE
add to select list:
LINEITEM.L_PARTKEY
LINEITEM.L_QUANTITY
LINEITEM.L_EXTENDEDPRICE
child columnfilter: LINEITEM.L_PARTKEY
[u'PART'] {}
child columnfilter: LINEITEM.L_QUANTITY
[u'PART'] {}
child columnfilter: LINEITEM.L_EXTENDEDPRICE
[u'PART'] {}
add to select list:
PART.P_PARTKEY
22222sp column filter
LINEITEM.L_PARTKEY
MULTIPLY(0.2,AVG(LINEITEM.L_QUANTITY))
groupby filter
TOUTER L_EXTENDEDPRICE
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TOUTER L_EXTENDEDPRICE
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TOUTER L_QUANTITY
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TINNER LQ
[u'LP', u'LQ']
TOUTER L_PARTKEY
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TINNER LP
[u'LP', u'LQ']
TOUTER L_EXTENDEDPRICE
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TOUTER L_PARTKEY
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TOUTER L_QUANTITY
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
LINEITEM L_QUANTITY
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
LINEITEM L_EXTENDEDPRICE
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
LINEITEM L_PARTKEY
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
PART P_PARTKEY
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
LINEITEM L_PARTKEY
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
LINEITEM L_PARTKEY
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
LINEITEM L_QUANTITY
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
LINEITEM L_EXTENDEDPRICE
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
PART P_PARTKEY
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
PART P_BRAND
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
PART P_CONTAINER
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
TINNER LQ
[u'LP', u'LQ']
TINNER LP
[u'LP', u'LQ']
LINEITEM L_PARTKEY
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
LINEITEM L_QUANTITY
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
LINEITEM L_PARTKEY
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
LINEITEM L_QUANTITY
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
LINEITEM L_PARTKEY
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
CHILD: <node.SPNode object at 0xb752b7ec> <node.JoinNode object at 0xb752f50c>
CHILD: <node.SPNode object at 0x8cb990c> <node.GroupbyNode object at 0xb753026c>
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
CHILD: <node.SPNode object at 0x8cb926c> <node.TableNode object at 0x8cb930c>
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
CHILD_NAME
CHILD_NAME LEFT
CHILD: <node.SPNode object at 0xb752f54c> <node.TableNode object at 0xb752f5ec>
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
CHILD_NAME
CHILD_NAME RIGHT
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
[u'LP', u'LQ']
[u'LP', u'LQ']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
GroupbyNode:----------
select_list:
exp_list: 
DIVIDE(SUM(TOUTER.1),7.0)
exp_alias_dic: 
DIVIDE(SUM(TOUTER.1),7.0) : AVG_YEARLY
table_list:  [u'TOUTER', u'TINNER'] table_alias_dic:  {}
groupby_list: 
1
JoinNode:----------
select_list:
exp_list: 
1
LEFT.2
exp_alias_dic: 
1 : None
LEFT.2 : None
where_condition:  AND(LT(LEFT.1,RIGHT.1))
table_list:  ['LEFT', 'RIGHT'] table_alias_dic:  {}
is_explicit:  False join_type:  None
where_condition:  EQ(LEFT.0,RIGHT.0)
left_child:
SPNode:----------
select_list:
exp_list: 
TOUTER.0
TOUTER.1
TOUTER.2
exp_alias_dic: 
TOUTER.1 : None
TOUTER.0 : None
TOUTER.2 : None
table_list:  [u'TOUTER'] table_alias_dic:  {}
JoinNode:----------
select_list:
exp_list: 
LEFT.0
LEFT.1
LEFT.2
exp_alias_dic: 
LEFT.1 : L_QUANTITY
LEFT.2 : L_EXTENDEDPRICE
LEFT.0 : L_PARTKEY
table_list:  ['LEFT', 'RIGHT'] table_alias_dic:  {}
is_explicit:  False join_type:  None
where_condition:  EQ(RIGHT.0,LEFT.1)
left_child:
SPNode:----------
select_list:
exp_list: 
LINEITEM.1
LINEITEM.4
LINEITEM.5
exp_alias_dic: 
LINEITEM.1 : L_PARTKEY
LINEITEM.5 : L_EXTENDEDPRICE
LINEITEM.4 : L_QUANTITY
table_list:  [u'LINEITEM'] table_alias_dic:  {}
TableNode:----------
select_list:
exp_list: 
exp_alias_dic: 
table_list:  [u'LINEITEM'] table_alias_dic:  {}
table_name:  LINEITEM table_alias:  
right_child:
SPNode:----------
select_list:
exp_list: 
PART.0
exp_alias_dic: 
PART.0 : None
where_condition:  AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
table_list:  [u'PART'] table_alias_dic:  {}
TableNode:----------
select_list:
exp_list: 
exp_alias_dic: 
table_list:  [u'PART'] table_alias_dic:  {}
table_name:  PART table_alias:  
right_child:
SPNode:----------
select_list:
exp_list: 
TINNER.0
TINNER.1
exp_alias_dic: 
TINNER.0 : None
TINNER.1 : None
table_list:  [u'TINNER'] table_alias_dic:  {}
GroupbyNode:----------
select_list:
exp_list: 
LINEITEM.0
MULTIPLY(0.2,AVG(LINEITEM.1))
exp_alias_dic: 
LINEITEM.0 : LP
MULTIPLY(0.2,AVG(LINEITEM.1)) : None
table_list:  [u'LINEITEM'] table_alias_dic:  {}
groupby_list: 
LINEITEM.0
SPNode:----------
select_list:
exp_list: 
LINEITEM.1
LINEITEM.4
exp_alias_dic: 
LINEITEM.1 : None
LINEITEM.4 : None
table_list:  [u'LINEITEM'] table_alias_dic:  {}
TableNode:----------
select_list:
exp_list: 
exp_alias_dic: 
table_list:  [u'LINEITEM'] table_alias_dic:  {}
table_name:  LINEITEM table_alias:  
GroupbyNode, PK_LIST:
1
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
111111111111111
__genOriginalExp__: LEFT.0 LEFT 0
111111111111111
__genOriginalExp__: LEFT.0 LEFT 0
new_exp LINEITEM.1
new_exp LINEITEM.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp LINEITEM.1
ret_exp_list
JoinNode, PK_LIST:
LINEITEM.1
LINEITEM.1
SPNode, PK_LIST:
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
JoinNode, PK_LIST:
LINEITEM.1
PART.0
SPNode, PK_LIST:
SPNode, PK_LIST:
SPNode, PK_LIST:
PartitionKey: LINEITEM 1
GroupbyNode, PK_LIST:
LINEITEM.1
SPNode, PK_LIST:
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb75197ac>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb75197ac> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0xb751934c>]
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter TOUTER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
map_filter LEFT []
map_filter RIGHT []
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.1
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb926c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc818c>, <expression.Column instance at 0x8cc826c>, <expression.Column instance at 0x8cc828c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752f54c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
pk_dic:
key: PART
value:
map_output: {u'PART': [<expression.Column instance at 0x8cc808c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc8bcc>, <expression.Column instance at 0x8cc8bec>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb75197ac>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb75197ac> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0x8cc8aec>]
<op.SpjOp object at 0x8cc8aec> [4, 5]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter TOUTER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.1
key: LINEITEM
value:
LINEITEM.1
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc502c>, <expression.Column instance at 0x8cc50cc>, <expression.Column instance at 0x8cc50ac>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752f54c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
pk_dic:
key: PART
value:
map_output: {u'PART': [<expression.Column instance at 0x8cc552c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc8e2c>, <expression.Column instance at 0x8cc808c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cc8aec> [4, 5]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb75197ac>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb75197ac> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0x8cc8dec>]
<op.SpjOp object at 0x8cc8dec> [4, 5, 6]
map:
sp
sp
join
reduce:
join
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter TOUTER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: LINEITEM
value:
LINEITEM.1
key: PART
value:
PART.0
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc86cc>, <expression.Column instance at 0x8cc874c>, <expression.Column instance at 0x8cc308c>], u'PART': [<expression.Column instance at 0x8cc8e0c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc8eec>, <expression.Column instance at 0x8cc328c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cc8aec> [4, 5]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cc8aec> [4, 5]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb75197ac>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb75197ac> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0x8cc8e0c>]
<op.SpjOp object at 0x8cc8e0c> [4, 5, 6]
map:
sp
join
reduce:
join
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter TOUTER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752f54c>]
ic_list:---------- [<node.SPNode object at 0xb752f54c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>]
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: LINEITEM
value:
LINEITEM.1
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc3d8c>, <expression.Column instance at 0x8cc388c>, <expression.Column instance at 0x8cc34ec>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc346c>, <expression.Column instance at 0x8cc3b4c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cc8aec> [4, 5]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb75197ac>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb75197ac> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0x8cc80cc>]
<op.SpjOp object at 0x8cc80cc> [4, 5]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter TOUTER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0x8cb926c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0x8cb926c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.1
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752f54c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
pk_dic:
key: PART
value:
map_output: {u'PART': [<expression.Column instance at 0x8cc3c6c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc37cc>, <expression.Column instance at 0x8cc39ac>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cc80cc> [4, 5]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb75197ac>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb75197ac> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0x8cc86cc>]
<op.SpjOp object at 0x8cc86cc> [4, 5, 6]
map:
sp
join
reduce:
join
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter TOUTER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0x8cb926c>]
ic_list:---------- [<node.SPNode object at 0x8cb926c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>]
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
pk_dic:
key: PART
value:
PART.0
map_output: {u'PART': [<expression.Column instance at 0x8cc3eac>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc3cac>, <expression.Column instance at 0x8cc3f4c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cc80cc> [4, 5]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cc80cc> [4, 5]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb75197ac>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb75197ac> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0x8cc8dec>]
<op.SpjOp object at 0x8cc8dec> [4, 5, 6]
map:
join
reduce:
join
sp
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter TOUTER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0x8cb926c>, <node.SPNode object at 0xb752f54c>]
ic_list:---------- [<node.SPNode object at 0x8cb926c>, <node.SPNode object at 0xb752f54c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>]
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 1
value:
1.1
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cbecac>, <expression.Column instance at 0x8cbe40c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cc80cc> [4, 5]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb75197ac>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb75197ac> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0xb751934c>]
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter TOUTER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
map_filter LEFT []
map_filter RIGHT []
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.1
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb926c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc828c>, <expression.Column instance at 0xb752fb6c>, <expression.Column instance at 0xb752fc2c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752f54c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
pk_dic:
key: PART
value:
map_output: {u'PART': [<expression.Column instance at 0x8cc826c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cbecac>, <expression.Column instance at 0x8cbe46c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb75197ac>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb75197ac> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0x8cc3c6c>]
<op.SpjOp object at 0x8cc3c6c> [4, 6]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter TOUTER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.1
key: 1
value:
1.0
key: PART
value:
PART.0
map_output: {u'PART': [<expression.Column instance at 0x8cb9bec>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb926c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb752fc2c>, <expression.Column instance at 0x8cb97cc>, <expression.Column instance at 0x8cbcc8c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc80cc>, <expression.Column instance at 0x8cc828c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cc3c6c> [4, 6]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb75197ac>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb75197ac> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0x8cbe40c>]
<op.SpjOp object at 0x8cbe40c> [4, 6, 5]
map:
sp
sp
join
reduce:
join
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter TOUTER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
pk_dic:
key: PART
value:
PART.0
key: LINEITEM
value:
LINEITEM.1
map_output: {u'PART': [<expression.Column instance at 0xb7515eec>], u'LINEITEM': [<expression.Column instance at 0x8cbca0c>, <expression.Column instance at 0xb752720c>, <expression.Column instance at 0xb752726c>]}
key: PART
value:
PART.0
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cbc12c>, <expression.Column instance at 0xb7515e0c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cc3c6c> [4, 6]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cc3c6c> [4, 6]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb75197ac>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb75197ac> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0xb752720c>]
<op.SpjOp object at 0xb752720c> [4, 6, 5]
map:
sp
join
reduce:
join
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter TOUTER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0x8cb926c>]
ic_list:---------- [<node.SPNode object at 0x8cb926c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>]
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
pk_dic:
key: PART
value:
PART.0
map_output: {u'PART': [<expression.Column instance at 0xb75158ec>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb7515e6c>, <expression.Column instance at 0xb751522c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cc3c6c> [4, 6]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb75197ac>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb75197ac> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0x8cc3c6c>]
<op.SpjOp object at 0x8cc3c6c> [4, 6]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter TOUTER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752f54c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752f54c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.1
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb926c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cbcc8c>, <expression.Column instance at 0xb75152ec>, <expression.Column instance at 0xb751532c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cbe40c>, <expression.Column instance at 0xb752fc2c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cc3c6c> [4, 6]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb75197ac>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb75197ac> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0xb752726c>]
<op.SpjOp object at 0xb752726c> [4, 6, 5]
map:
sp
join
reduce:
join
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter TOUTER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752f54c>]
ic_list:---------- [<node.SPNode object at 0xb752f54c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>]
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: LINEITEM
value:
LINEITEM.1
map_output: {u'LINEITEM': [<expression.Column instance at 0xb750960c>, <expression.Column instance at 0xb750966c>, <expression.Column instance at 0xb750982c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb75153ac>, <expression.Column instance at 0xb751516c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cc3c6c> [4, 6]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cc3c6c> [4, 6]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb75197ac>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb75197ac> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0xb752718c>]
<op.SpjOp object at 0xb752718c> [4, 6, 5]
map:
join
reduce:
join
sp
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter TOUTER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752f54c>, <node.SPNode object at 0x8cb926c>]
ic_list:---------- [<node.SPNode object at 0xb752f54c>, <node.SPNode object at 0x8cb926c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>]
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 1
value:
1.1
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb75154ac>, <expression.Column instance at 0xb75159ac>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cc3c6c> [4, 6]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
op2:
<op.SpjOp object at 0xb75197ac> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0xb751934c>]
pk1_list:
LINEITEM.1
PART.0
pk2_list:
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb752720c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb752720c> [3, 4]
map:
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter LEFT []
map_filter RIGHT []
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.1
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb926c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb7515d8c>, <expression.Column instance at 0xb7515e4c>, <expression.Column instance at 0xb7515d6c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752f54c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
pk_dic:
key: PART
value:
map_output: {u'PART': [<expression.Column instance at 0xb7515c0c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb75152ec>, <expression.Column instance at 0xb7515e8c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb752720c> [3, 4]
map:
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb75159cc>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb75159cc> [3, 4, 5]
map:
sp
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.1
key: LINEITEM
value:
LINEITEM.1
map_output: {u'LINEITEM': [<expression.Column instance at 0xb751540c>, <expression.Column instance at 0xb7515f6c>, <expression.Column instance at 0xb751582c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752f54c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
pk_dic:
key: PART
value:
map_output: {u'PART': [<expression.Column instance at 0xb751904c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb7515c0c>, <expression.Column instance at 0xb7515bcc>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb75159cc> [3, 4, 5]
map:
sp
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751506c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb751506c> [3, 4, 5, 6]
map:
sp
sp
join
sp
reduce:
join
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: LINEITEM
value:
LINEITEM.1
key: PART
value:
PART.0
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cbc70c>, <expression.Column instance at 0x8cbcbcc>, <expression.Column instance at 0x8cbcbec>], u'PART': [<expression.Column instance at 0x8cbc10c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cbcbac>, <expression.Column instance at 0x8cb95cc>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb75159cc> [3, 4, 5]
map:
sp
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb75159cc> [3, 4, 5]
map:
sp
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbc70c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0x8cbc70c> [3, 4, 5, 6]
map:
sp
join
sp
reduce:
join
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752f54c>]
ic_list:---------- [<node.SPNode object at 0xb752f54c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>]
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: LINEITEM
value:
LINEITEM.1
map_output: {u'LINEITEM': [<expression.Column instance at 0xb752fb2c>, <expression.Column instance at 0xb752faac>, <expression.Column instance at 0x8cbe40c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cbe34c>, <expression.Column instance at 0x8cbe64c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb75159cc> [3, 4, 5]
map:
sp
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb752720c> [3, 4]
map:
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb752720c> [3, 4]
map:
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751540c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb751540c> [3, 4, 5]
map:
join
sp
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0x8cb926c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0x8cb926c>]
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.1
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752f54c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
pk_dic:
key: PART
value:
map_output: {u'PART': [<expression.Column instance at 0x8cbe68c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb752faac>, <expression.Column instance at 0xb752fb2c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751540c> [3, 4, 5]
map:
join
sp
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751904c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb751904c> [3, 4, 5, 6]
map:
sp
join
sp
reduce:
join
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0x8cb926c>]
ic_list:---------- [<node.SPNode object at 0x8cb926c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>]
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
pk_dic:
key: PART
value:
PART.0
map_output: {u'PART': [<expression.Column instance at 0x8cc3d2c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc3b4c>, <expression.Column instance at 0x8cc384c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751540c> [3, 4, 5]
map:
join
sp
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751540c> [3, 4, 5]
map:
join
sp
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751904c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb751904c> [3, 4, 5, 6]
map:
join
sp
reduce:
join
sp
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0x8cb926c>, <node.SPNode object at 0xb752f54c>]
ic_list:---------- [<node.SPNode object at 0x8cb926c>, <node.SPNode object at 0xb752f54c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>]
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 1
value:
1.1
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc386c>, <expression.Column instance at 0x8cc314c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751540c> [3, 4, 5]
map:
join
sp
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb752720c> [3, 4]
map:
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb752720c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb752720c> [3, 4]
map:
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter LEFT []
map_filter RIGHT []
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.1
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb926c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb7515d6c>, <expression.Column instance at 0x8cc306c>, <expression.Column instance at 0xb75156cc>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752f54c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
pk_dic:
key: PART
value:
map_output: {u'PART': [<expression.Column instance at 0xb7515e4c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cbe68c>, <expression.Column instance at 0xb7515d8c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb752720c> [3, 4]
map:
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751904c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb751904c> [3, 4, 6]
map:
sp
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.1
key: 1
value:
1.0
key: PART
value:
PART.0
map_output: {u'PART': [<expression.Column instance at 0x8cc8e2c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb926c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb75156cc>, <expression.Column instance at 0x8cc8e8c>, <expression.Column instance at 0xb75096ac>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb7515d8c>, <expression.Column instance at 0xb7515d6c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751904c> [3, 4, 6]
map:
sp
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe68c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0x8cbe68c> [3, 4, 6, 5]
map:
sp
sp
join
sp
reduce:
join
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
pk_dic:
key: PART
value:
PART.0
key: LINEITEM
value:
LINEITEM.1
map_output: {u'PART': [<expression.Column instance at 0xb750928c>], u'LINEITEM': [<expression.Column instance at 0xb750926c>, <expression.Column instance at 0xb750932c>, <expression.Column instance at 0xb750930c>]}
key: PART
value:
PART.0
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc874c>, <expression.Column instance at 0x8cc8e6c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751904c> [3, 4, 6]
map:
sp
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751904c> [3, 4, 6]
map:
sp
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb7509e4c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb7509e4c> [3, 4, 6, 5]
map:
sp
join
sp
reduce:
join
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0x8cb926c>]
ic_list:---------- [<node.SPNode object at 0x8cb926c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>]
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
pk_dic:
key: PART
value:
PART.0
map_output: {u'PART': [<expression.Column instance at 0x8cc8eec>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb750936c>, <expression.Column instance at 0x8cc31ac>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751904c> [3, 4, 6]
map:
sp
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb752720c> [3, 4]
map:
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb752720c> [3, 4]
map:
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb7509d4c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb7509d4c> [3, 4, 6]
map:
join
sp
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752f54c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752f54c>]
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.1
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb926c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc8e6c>, <expression.Column instance at 0x8cc358c>, <expression.Column instance at 0x8cc32ac>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc31ac>, <expression.Column instance at 0x8cc3d6c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb7509d4c> [3, 4, 6]
map:
join
sp
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb7509dcc>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb7509dcc> [3, 4, 6, 5]
map:
sp
join
sp
reduce:
join
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752f54c>]
ic_list:---------- [<node.SPNode object at 0xb752f54c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>]
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: LINEITEM
value:
LINEITEM.1
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc3aec>, <expression.Column instance at 0x8cc376c>, <expression.Column instance at 0x8cc370c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc320c>, <expression.Column instance at 0x8cc3a6c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb7509d4c> [3, 4, 6]
map:
join
sp
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb7509d4c> [3, 4, 6]
map:
join
sp
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb7509b0c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb7509b0c> [3, 4, 6, 5]
map:
join
sp
reduce:
join
sp
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752f54c>, <node.SPNode object at 0x8cb926c>]
ic_list:---------- [<node.SPNode object at 0xb752f54c>, <node.SPNode object at 0x8cb926c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>]
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 1
value:
1.1
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc398c>, <expression.Column instance at 0x8cc346c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb7509d4c> [3, 4, 6]
map:
join
sp
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb752720c> [3, 4]
map:
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
op2:
<op.SpjOp object at 0xb75197ac> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0xb751934c>]
pk1_list:
LINEITEM.1
PART.0
pk2_list:
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
op2:
<op.SpjOp object at 0xb75197ac> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0xb751934c>]
pk1_list:
LINEITEM.1
PART.0
pk2_list:
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
op2:
<op.SpjOp object at 0xb75197ac> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0xb751934c>]
pk1_list:
LINEITEM.1
PART.0
pk2_list:
pk_compare is true!!!!!!!!
use rule 4......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb7509e4c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb7509e4c> [3, 4]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- [<node.SPNode object at 0xb752b7ec>]
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter LEFT []
map_filter RIGHT []
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.1
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb926c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc32ac>, <expression.Column instance at 0x8cc3eac>, <expression.Column instance at 0x8cbea8c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752f54c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
pk_dic:
key: PART
value:
map_output: {u'PART': [<expression.Column instance at 0x8cbeb2c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc3f4c>, <expression.Column instance at 0x8cc358c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb7509e4c> [3, 4]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cc8e6c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0x8cc8e6c> [3, 4, 5]
map:
sp
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- [<node.SPNode object at 0xb752b7ec>]
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.1
key: LINEITEM
value:
LINEITEM.1
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cbef2c>, <expression.Column instance at 0x8cbe46c>, <expression.Column instance at 0x8cbef4c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752f54c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
pk_dic:
key: PART
value:
map_output: {u'PART': [<expression.Column instance at 0x8cb986c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cbeb2c>, <expression.Column instance at 0xb75307ec>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cc8e6c> [3, 4, 5]
map:
sp
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cc398c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0x8cc398c> [3, 4, 5, 6]
map:
sp
sp
join
reduce:
join
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- [<node.SPNode object at 0xb752b7ec>]
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: LINEITEM
value:
LINEITEM.1
key: PART
value:
PART.0
map_output: {u'LINEITEM': [<expression.Column instance at 0xb751908c>, <expression.Column instance at 0xb751914c>, <expression.Column instance at 0xb75196ac>], u'PART': [<expression.Column instance at 0x8cbc0ac>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb75192cc>, <expression.Column instance at 0xb751510c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cc8e6c> [3, 4, 5]
map:
sp
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cc8e6c> [3, 4, 5]
map:
sp
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751908c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb751908c> [3, 4, 5, 6]
map:
sp
join
reduce:
join
sp
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>, <node.SPNode object at 0xb752f54c>]
ic_list:---------- [<node.SPNode object at 0xb752f54c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>]
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: LINEITEM
value:
LINEITEM.1
map_output: {u'LINEITEM': [<expression.Column instance at 0xb7515fec>, <expression.Column instance at 0xb751532c>, <expression.Column instance at 0xb7515c4c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb7515eec>, <expression.Column instance at 0xb751560c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cc8e6c> [3, 4, 5]
map:
sp
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb7509e4c> [3, 4]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb7509e4c> [3, 4]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe46c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0x8cbe46c> [3, 4, 5]
map:
join
reduce:
join
sp
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>, <node.SPNode object at 0x8cb926c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0x8cb926c>]
oc_list:---------- [<node.SPNode object at 0xb752b7ec>]
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.1
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752f54c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
pk_dic:
key: PART
value:
map_output: {u'PART': [<expression.Column instance at 0xb751520c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb751560c>, <expression.Column instance at 0xb75151ec>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cbe46c> [3, 4, 5]
map:
join
reduce:
join
sp
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cc8e6c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0x8cc8e6c> [3, 4, 5, 6]
map:
sp
join
reduce:
join
sp
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>, <node.SPNode object at 0x8cb926c>]
ic_list:---------- [<node.SPNode object at 0x8cb926c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>]
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
pk_dic:
key: PART
value:
PART.0
map_output: {u'PART': [<expression.Column instance at 0xb750d40c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb750d78c>, <expression.Column instance at 0xb750d52c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cbe46c> [3, 4, 5]
map:
join
reduce:
join
sp
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cbe46c> [3, 4, 5]
map:
join
reduce:
join
sp
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cc8a4c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0x8cc8a4c> [3, 4, 5, 6]
map:
join
reduce:
join
sp
sp
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>, <node.SPNode object at 0x8cb926c>, <node.SPNode object at 0xb752f54c>]
ic_list:---------- [<node.SPNode object at 0x8cb926c>, <node.SPNode object at 0xb752f54c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>]
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 1
value:
1.1
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb751530c>, <expression.Column instance at 0xb751550c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cbe46c> [3, 4, 5]
map:
join
reduce:
join
sp
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb7509e4c> [3, 4]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb7509e4c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb7509e4c> [3, 4]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- [<node.SPNode object at 0xb752b7ec>]
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter LEFT []
map_filter RIGHT []
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.1
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb926c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb751516c>, <expression.Column instance at 0xb751596c>, <expression.Column instance at 0xb75159ec>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752f54c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
pk_dic:
key: PART
value:
map_output: {u'PART': [<expression.Column instance at 0xb75155cc>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb751520c>, <expression.Column instance at 0xb7515d4c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb7509e4c> [3, 4]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb752724c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb752724c> [3, 4, 6]
map:
sp
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- [<node.SPNode object at 0xb752b7ec>]
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.1
key: 1
value:
1.0
key: PART
value:
PART.0
map_output: {u'PART': [<expression.Column instance at 0xb7515a4c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb926c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb75159ec>, <expression.Column instance at 0xb7515f6c>, <expression.Column instance at 0xb75153ac>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb751516c>, <expression.Column instance at 0xb751540c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb752724c> [3, 4, 6]
map:
sp
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751592c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb751592c> [3, 4, 6, 5]
map:
sp
sp
join
reduce:
join
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- [<node.SPNode object at 0xb752b7ec>]
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
pk_dic:
key: PART
value:
PART.0
key: LINEITEM
value:
LINEITEM.1
map_output: {u'PART': [<expression.Column instance at 0x8cbce2c>], u'LINEITEM': [<expression.Column instance at 0xb751908c>, <expression.Column instance at 0xb751912c>, <expression.Column instance at 0xb75191cc>]}
key: PART
value:
PART.0
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb7515d8c>, <expression.Column instance at 0x8cbcc6c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb752724c> [3, 4, 6]
map:
sp
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb752724c> [3, 4, 6]
map:
sp
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751912c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb751912c> [3, 4, 6, 5]
map:
sp
join
reduce:
join
sp
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>, <node.SPNode object at 0x8cb926c>]
ic_list:---------- [<node.SPNode object at 0x8cb926c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>]
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
pk_dic:
key: PART
value:
PART.0
map_output: {u'PART': [<expression.Column instance at 0xb752fc2c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb752fb2c>, <expression.Column instance at 0x8cb982c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb752724c> [3, 4, 6]
map:
sp
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb7509e4c> [3, 4]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb7509e4c> [3, 4]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb75271cc>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb75271cc> [3, 4, 6]
map:
join
reduce:
join
sp
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>, <node.SPNode object at 0xb752f54c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752f54c>]
oc_list:---------- [<node.SPNode object at 0xb752b7ec>]
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.1
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb926c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb75153ac>, <expression.Column instance at 0x8cbcc0c>, <expression.Column instance at 0x8cbe3ec>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb7515f6c>, <expression.Column instance at 0x8cbe66c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb75271cc> [3, 4, 6]
map:
join
reduce:
join
sp
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751560c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb751560c> [3, 4, 6, 5]
map:
sp
join
reduce:
join
sp
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>, <node.SPNode object at 0xb752f54c>]
ic_list:---------- [<node.SPNode object at 0xb752f54c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>]
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: LINEITEM
value:
LINEITEM.1
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc3c0c>, <expression.Column instance at 0x8cc3ecc>, <expression.Column instance at 0x8cc3cac>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc3e2c>, <expression.Column instance at 0x8cc374c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb75271cc> [3, 4, 6]
map:
join
reduce:
join
sp
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb75271cc> [3, 4, 6]
map:
join
reduce:
join
sp
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751938c>]
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751560c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb751560c> [3, 4, 6, 5]
map:
join
reduce:
join
sp
sp
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
AND(LT(LEFT.1,RIGHT.1))
map_filter RIGHT []
AND(LT(LEFT.1,RIGHT.1))
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>, <node.SPNode object at 0xb752f54c>, <node.SPNode object at 0x8cb926c>]
ic_list:---------- [<node.SPNode object at 0xb752f54c>, <node.SPNode object at 0x8cb926c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>]
output_node:------ <node.SPNode object at 0xb752b7ec>
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 1
value:
1.1
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc362c>, <expression.Column instance at 0x8cc308c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb75271cc> [3, 4, 6]
map:
join
reduce:
join
sp
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb7509e4c> [3, 4]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb75197ac> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0xb751934c>]
op2:
<op.SpjOp object at 0xb751938c> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb75197ac>, <op.SpjOp object at 0x8cbe18c>]
pk1_list:
pk2_list:
LINEITEM.1
LINEITEM.1
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb75271cc>]
<op.SpjOp object at 0xb75271cc> [2, 3]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751934c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter TOUTER []
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
map_filter LEFT []
map_filter RIGHT []
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.1
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb926c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cbe3ec>, <expression.Column instance at 0x8cc3bec>, <expression.Column instance at 0x8cb982c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752f54c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
pk_dic:
key: PART
value:
map_output: {u'PART': [<expression.Column instance at 0x8cbcc0c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb75155cc>, <expression.Column instance at 0xb75153ac>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb75271cc>]
<op.SpjOp object at 0xb75271cc> [2, 3]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751560c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb751560c> [4, 5]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter TOUTER []
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.1
key: LINEITEM
value:
LINEITEM.1
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc808c>, <expression.Column instance at 0x8cc856c>, <expression.Column instance at 0x8cc86cc>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752f54c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
pk_dic:
key: PART
value:
map_output: {u'PART': [<expression.Column instance at 0xb750942c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cbcc0c>, <expression.Column instance at 0xb750910c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751560c> [4, 5]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb75271cc>]
<op.SpjOp object at 0xb75271cc> [2, 3]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cc890c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0x8cc890c> [4, 5, 6]
map:
sp
sp
join
reduce:
join
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter TOUTER []
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: LINEITEM
value:
LINEITEM.1
key: PART
value:
PART.0
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc8d0c>, <expression.Column instance at 0x8cc830c>, <expression.Column instance at 0x8cc864c>], u'PART': [<expression.Column instance at 0xb750db2c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc89cc>, <expression.Column instance at 0x8cc806c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751560c> [4, 5]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751560c> [4, 5]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb75271cc>]
<op.SpjOp object at 0xb75271cc> [2, 3]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb75090ec>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb75090ec> [4, 5, 6]
map:
sp
join
reduce:
join
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter TOUTER []
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752f54c>]
ic_list:---------- [<node.SPNode object at 0xb752f54c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>]
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: LINEITEM
value:
LINEITEM.1
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc3b6c>, <expression.Column instance at 0x8cc340c>, <expression.Column instance at 0x8cc30ec>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc8b8c>, <expression.Column instance at 0x8cc388c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751560c> [4, 5]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb75271cc>]
<op.SpjOp object at 0xb75271cc> [2, 3]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb750922c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb750922c> [4, 5]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter TOUTER []
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0x8cb926c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0x8cb926c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.1
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752f54c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
pk_dic:
key: PART
value:
map_output: {u'PART': [<expression.Column instance at 0x8cc346c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc388c>, <expression.Column instance at 0x8cc3dcc>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb750922c> [4, 5]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb75271cc>]
<op.SpjOp object at 0xb75271cc> [2, 3]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb750942c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb750942c> [4, 5, 6]
map:
sp
join
reduce:
join
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter TOUTER []
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0x8cb926c>]
ic_list:---------- [<node.SPNode object at 0x8cb926c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>]
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
pk_dic:
key: PART
value:
PART.0
map_output: {u'PART': [<expression.Column instance at 0x8cbec2c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc890c>, <expression.Column instance at 0x8cb9c6c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb750922c> [4, 5]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb750922c> [4, 5]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb75271cc>]
<op.SpjOp object at 0xb75271cc> [2, 3]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb750942c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb750942c> [4, 5, 6]
map:
join
reduce:
join
sp
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter TOUTER []
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0x8cb926c>, <node.SPNode object at 0xb752f54c>]
ic_list:---------- [<node.SPNode object at 0x8cb926c>, <node.SPNode object at 0xb752f54c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>]
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 1
value:
1.1
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cb97cc>, <expression.Column instance at 0x8cbca4c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb750922c> [4, 5]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb75271cc>]
<op.SpjOp object at 0xb75271cc> [2, 3]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751934c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter TOUTER []
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
map_filter LEFT []
map_filter RIGHT []
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.1
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb926c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cb982c>, <expression.Column instance at 0x8cb9c6c>, <expression.Column instance at 0x8cbc84c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752f54c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
pk_dic:
key: PART
value:
map_output: {u'PART': [<expression.Column instance at 0x8cc3bec>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cbca4c>, <expression.Column instance at 0x8cbc96c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb75271cc>]
<op.SpjOp object at 0xb75271cc> [2, 3]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbec2c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0x8cbec2c> [4, 6]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter TOUTER []
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.1
key: 1
value:
1.0
key: PART
value:
PART.0
map_output: {u'PART': [<expression.Column instance at 0xb75196cc>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb926c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cbc84c>, <expression.Column instance at 0xb7515f0c>, <expression.Column instance at 0xb75159ac>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cb982c>, <expression.Column instance at 0x8cb9c6c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cbec2c> [4, 6]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb75271cc>]
<op.SpjOp object at 0xb75271cc> [2, 3]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cb97cc>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0x8cb97cc> [4, 6, 5]
map:
sp
sp
join
reduce:
join
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter TOUTER []
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
pk_dic:
key: PART
value:
PART.0
key: LINEITEM
value:
LINEITEM.1
map_output: {u'PART': [<expression.Column instance at 0xb750dfcc>], u'LINEITEM': [<expression.Column instance at 0xb7515eec>, <expression.Column instance at 0xb751572c>, <expression.Column instance at 0xb75156ac>]}
key: PART
value:
PART.0
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb7512d0c>, <expression.Column instance at 0xb75129ec>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cbec2c> [4, 6]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cbec2c> [4, 6]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb75271cc>]
<op.SpjOp object at 0xb75271cc> [2, 3]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cc346c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0x8cc346c> [4, 6, 5]
map:
sp
join
reduce:
join
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter TOUTER []
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0x8cb926c>]
ic_list:---------- [<node.SPNode object at 0x8cb926c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>]
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
pk_dic:
key: PART
value:
PART.0
map_output: {u'PART': [<expression.Column instance at 0xb751226c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb751222c>, <expression.Column instance at 0xb75127ac>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cbec2c> [4, 6]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb75271cc>]
<op.SpjOp object at 0xb75271cc> [2, 3]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbec2c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0x8cbec2c> [4, 6]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter TOUTER []
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752f54c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752f54c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.1
key: 1
value:
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb926c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb751242c>, <expression.Column instance at 0xb751248c>, <expression.Column instance at 0xb751246c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb75124ac>, <expression.Column instance at 0xb75124ec>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cbec2c> [4, 6]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb75271cc>]
<op.SpjOp object at 0xb75271cc> [2, 3]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb75128ac>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb75128ac> [4, 6, 5]
map:
sp
join
reduce:
join
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter TOUTER []
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752f54c>]
ic_list:---------- [<node.SPNode object at 0xb752f54c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>]
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: LINEITEM
value:
LINEITEM.1
map_output: {u'LINEITEM': [<expression.Column instance at 0xb751296c>, <expression.Column instance at 0xb7512bec>, <expression.Column instance at 0xb7512bcc>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb7512aec>, <expression.Column instance at 0xb7512fec>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cbec2c> [4, 6]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cbec2c> [4, 6]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb75271cc>]
<op.SpjOp object at 0xb75271cc> [2, 3]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751296c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb751296c> [4, 6, 5]
map:
join
reduce:
join
sp
sp
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter TOUTER []
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
1.0
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752f54c>, <node.SPNode object at 0x8cb926c>]
ic_list:---------- [<node.SPNode object at 0xb752f54c>, <node.SPNode object at 0x8cb926c>]
oc_list:---------- [<node.JoinNode object at 0xb752f50c>]
output_node:------ <node.JoinNode object at 0xb752f50c>
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 1
value:
1.1
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb752726c>, <expression.Column instance at 0xb751514c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x8cbec2c> [4, 6]
map:
join
reduce:
join
sp
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0xb751934c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>]
op2:
<op.SpjOp object at 0xb75271cc> [2, 3]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0xb751934c>, <op.SpjOp object at 0x8cbe18c>]
pk1_list:
LINEITEM.1
PART.0
pk2_list:
LINEITEM.1
LINEITEM.1
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb75126cc>]
<op.SpjOp object at 0xb75126cc> [2, 3, 4]
map:
join
sp
join
reduce:
join
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LEFT []
map_filter RIGHT []
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.1
key: 1
value:
1.0
1.0
1.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb926c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb751246c>, <expression.Column instance at 0xb751238c>, <expression.Column instance at 0xb7512fcc>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752f54c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
pk_dic:
key: PART
value:
map_output: {u'PART': [<expression.Column instance at 0xb751586c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb751564c>, <expression.Column instance at 0xb751538c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0xb751e28c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb75126cc> [2, 3, 4]
map:
join
sp
join
reduce:
join
join
CHILD_LIST:  [<op.SpjOp object at 0xb751e28c>, <op.SpjOp object at 0x8cbe02c>, <op.SpjOp object at 0x8cbe18c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb751242c>]
<op.SpjOp object at 0xb751242c> [2, 3, 4, 5]
map:
sp
join
sp
join
reduce:
join
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>, <op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk LEFT.1 False LEFT LEFT
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
pk RIGHT.0 False RIGHT RIGHT
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.1
1.0
1.0
key: LINEITEM
value:
LINEITEM.1
map_output: {u'LINEITEM': [<expression.Column instance at 0xb7515b6c>, <expression.Column instance at 0xb75158ac>, <expression.Column instance at 0xb75158cc>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb752f54c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
pk_dic:
key: PART
value:
map_output: {u'PART': [<expression.Column instance at 0xb751560c>]}
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb751586c>, <expression.Column instance at 0xb75191cc>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbe02c> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0xb751242c> [2, 3, 4, 5]
map:
sp
join
sp
join
reduce:
join
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe02c>, <op.SpjOp object at 0x8cbe18c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb752726c>]
<op.SpjOp object at 0xb752726c> [2, 3, 4, 5, 6]
map:
sp
sp
join
sp
join
reduce:
join
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
key: LINEITEM
value:
LINEITEM.1
key: PART
value:
PART.0
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cbcb8c>, <expression.Column instance at 0x8cbc10c>, <expression.Column instance at 0x8cbc92c>], u'PART': [<expression.Column instance at 0xb750df8c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cb964c>, <expression.Column instance at 0xb752fb6c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
pk1_list:
pk2_list:
LINEITEM.1
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb752726c>]
<op.SpjOp object at 0xb752726c> [2, 3, 4, 5, 6]
map:
sp
sp
join
sp
join
reduce:
join
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0xb751586c>]
<op.SpjeOp object at 0xb751586c> [8, 9]
map:
sp
groupby
reduce:
groupby
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
key: LINEITEM
value:
LINEITEM.1
key: PART
value:
PART.0
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cbe68c>, <expression.Column instance at 0x8cc312c>, <expression.Column instance at 0x8cc3a4c>], u'PART': [<expression.Column instance at 0x8cbc10c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
PartitionKey: LINEITEM 1
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: LINEITEM
value:
LINEITEM.1
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc324c>, <expression.Column instance at 0x8cc308c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
pk1_list:
pk2_list:
LINEITEM.1
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
pk1_list:
pk2_list:
LINEITEM.1
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb752726c>]
<op.SpjOp object at 0xb752726c> [2, 3, 4, 5, 6]
map:
sp
sp
join
sp
join
reduce:
join
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe18c>]
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0xb750dfcc>]
<op.SpjeOp object at 0xb750dfcc> [8, 9]
map:
groupby
reduce:
groupby
sp
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
key: LINEITEM
value:
LINEITEM.1
key: PART
value:
PART.0
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc856c>, <expression.Column instance at 0x8cc898c>, <expression.Column instance at 0x8cc88ac>], u'PART': [<expression.Column instance at 0xb751586c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter TINNER []
pk_dic:
key: 0
value:
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>, <node.SPNode object at 0xb753078c>]
ic_list:---------- [<node.SPNode object at 0xb753078c>]
oc_list:---------- [<node.GroupbyNode object at 0xb753026c>]
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
pk1_list:
pk2_list:
LINEITEM.1
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
op2:
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
pk1_list:
LINEITEM.1
pk2_list:
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
op2:
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
pk1_list:
LINEITEM.1
pk2_list:
pk_compare is true!!!!!!!!
use rule 2......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb752726c>]
<op.SpjOp object at 0xb752726c> [2, 3, 4, 5, 6]
map:
sp
sp
join
sp
join
reduce:
join
join
CHILD_LIST:  [<op.SpjeOp object at 0xb750dfcc>]
<op.SpjeOp object at 0xb750dfcc> [7, 8]
map:
groupby
sp
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
key: LINEITEM
value:
LINEITEM.1
key: PART
value:
PART.0
map_output: {u'LINEITEM': [<expression.Column instance at 0xb750922c>, <expression.Column instance at 0x8cc896c>, <expression.Column instance at 0x8cc8d4c>], u'PART': [<expression.Column instance at 0x8cc898c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
key: PART
value:
PART.0
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc8b4c>, <expression.Column instance at 0x8cc8a8c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjeOp object at 0xb750dfcc> [7, 8]
map:
groupby
sp
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
pk1_list:
pk2_list:
LINEITEM.1
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb752726c>]
<op.SpjOp object at 0xb752726c> [2, 3, 4, 5, 6]
map:
sp
sp
join
sp
join
reduce:
join
join
CHILD_LIST:  [<op.SpjeOp object at 0x8cc806c>]
<op.SpjeOp object at 0x8cc806c> [7, 8, 9]
map:
sp
groupby
sp
reduce:
groupby
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
key: LINEITEM
value:
LINEITEM.1
key: PART
value:
PART.0
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cc30cc>, <expression.Column instance at 0x8cc3b0c>, <expression.Column instance at 0x8cc34ec>], u'PART': [<expression.Column instance at 0x8cc896c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
key: PART
value:
PART.0
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
PartitionKey: LINEITEM 1
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: LINEITEM
value:
LINEITEM.1
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cbec8c>, <expression.Column instance at 0x8cbed2c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjeOp object at 0xb750dfcc> [7, 8]
map:
groupby
sp
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
pk1_list:
pk2_list:
LINEITEM.1
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjeOp object at 0xb750dfcc> [7, 8]
map:
groupby
sp
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
pk1_list:
pk2_list:
LINEITEM.1
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb752726c>]
<op.SpjOp object at 0xb752726c> [2, 3, 4, 5, 6]
map:
sp
sp
join
sp
join
reduce:
join
join
CHILD_LIST:  [<op.SpjeOp object at 0x8cc806c>]
<op.SpjeOp object at 0x8cc806c> [7, 8, 9]
map:
groupby
sp
reduce:
groupby
sp
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
key: LINEITEM
value:
LINEITEM.1
key: PART
value:
PART.0
map_output: {u'LINEITEM': [<expression.Column instance at 0x8cbe46c>, <expression.Column instance at 0xb752fc2c>, <expression.Column instance at 0xb752fb6c>], u'PART': [<expression.Column instance at 0x8cc874c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
key: PART
value:
PART.0
reduce_phase [<node.GroupbyNode object at 0xb753026c>, <node.SPNode object at 0xb753078c>]
ic_list:---------- [<node.SPNode object at 0xb753078c>]
oc_list:---------- [<node.GroupbyNode object at 0xb753026c>]
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjeOp object at 0xb750dfcc> [7, 8]
map:
groupby
sp
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
pk1_list:
pk2_list:
LINEITEM.1
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
op2:
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
pk1_list:
LINEITEM.1
pk2_list:
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
op2:
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
pk1_list:
LINEITEM.1
pk2_list:
pk_compare is true!!!!!!!!
use rule 4......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb752726c>]
<op.SpjOp object at 0xb752726c> [2, 3, 4, 5, 6]
map:
sp
sp
join
sp
join
reduce:
join
join
CHILD_LIST:  [<op.SpjeOp object at 0xb750922c>]
<op.SpjeOp object at 0xb750922c> [7, 8]
map:
groupby
reduce:
groupby
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
key: LINEITEM
value:
LINEITEM.1
key: PART
value:
PART.0
map_output: {u'LINEITEM': [<expression.Column instance at 0xb750d10c>, <expression.Column instance at 0xb750dc4c>, <expression.Column instance at 0xb750dccc>], u'PART': [<expression.Column instance at 0xb752fb6c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
key: PART
value:
PART.0
reduce_phase [<node.GroupbyNode object at 0xb753026c>, <node.SPNode object at 0x8cb990c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- [<node.SPNode object at 0x8cb990c>]
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb75150ac>, <expression.Column instance at 0xb7512a2c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjeOp object at 0xb750922c> [7, 8]
map:
groupby
reduce:
groupby
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
pk1_list:
pk2_list:
LINEITEM.1
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb752726c>]
<op.SpjOp object at 0xb752726c> [2, 3, 4, 5, 6]
map:
sp
sp
join
sp
join
reduce:
join
join
CHILD_LIST:  [<op.SpjeOp object at 0xb752fc2c>]
<op.SpjeOp object at 0xb752fc2c> [7, 8, 9]
map:
sp
groupby
reduce:
groupby
sp
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
key: LINEITEM
value:
LINEITEM.1
key: PART
value:
PART.0
map_output: {u'LINEITEM': [<expression.Column instance at 0xb751258c>, <expression.Column instance at 0xb751212c>, <expression.Column instance at 0xb751218c>], u'PART': [<expression.Column instance at 0xb750dc4c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
key: PART
value:
PART.0
reduce_phase [<node.GroupbyNode object at 0xb753026c>, <node.SPNode object at 0x8cb990c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- [<node.SPNode object at 0x8cb990c>]
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
PartitionKey: LINEITEM 1
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: LINEITEM
value:
LINEITEM.1
map_output: {u'LINEITEM': [<expression.Column instance at 0xb75057cc>, <expression.Column instance at 0xb75058ac>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjeOp object at 0xb750922c> [7, 8]
map:
groupby
reduce:
groupby
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
pk1_list:
pk2_list:
LINEITEM.1
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjeOp object at 0xb750922c> [7, 8]
map:
groupby
reduce:
groupby
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
pk1_list:
pk2_list:
LINEITEM.1
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb752726c>]
<op.SpjOp object at 0xb752726c> [2, 3, 4, 5, 6]
map:
sp
sp
join
sp
join
reduce:
join
join
CHILD_LIST:  [<op.SpjeOp object at 0xb752fc2c>]
<op.SpjeOp object at 0xb752fc2c> [7, 8, 9]
map:
groupby
reduce:
groupby
sp
sp
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
oc_list:---------- []
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
ismapphasebottom
joinnode pkdic--------
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk LEFT.0 False LEFT LEFT
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
pk_dic:
key: 0
value:
0.0
key: 1
value:
1.0
key: LINEITEM
value:
LINEITEM.1
key: PART
value:
PART.0
map_output: {u'LINEITEM': [<expression.Column instance at 0xb750550c>, <expression.Column instance at 0xb750530c>, <expression.Column instance at 0xb750532c>], u'PART': [<expression.Column instance at 0xb751212c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
key: PART
value:
PART.0
reduce_phase [<node.GroupbyNode object at 0xb753026c>, <node.SPNode object at 0x8cb990c>, <node.SPNode object at 0xb753078c>]
ic_list:---------- [<node.SPNode object at 0xb753078c>]
oc_list:---------- [<node.GroupbyNode object at 0xb753026c>, <node.SPNode object at 0x8cb990c>]
output_node:------ <node.SPNode object at 0x8cb990c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjeOp object at 0xb750922c> [7, 8]
map:
groupby
reduce:
groupby
sp
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
pk1_list:
pk2_list:
LINEITEM.1
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbe18c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
op2:
<op.SpjOp object at 0xb752726c> [2, 3, 4, 5, 6]
map:
sp
sp
join
sp
join
reduce:
join
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbe18c>]
pk1_list:
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb750922c>]
<op.SpjOp object at 0xb750922c> [2, 3, 4, 5, 6, 7]
map:
sp
sp
sp
join
sp
join
reduce:
join
join
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- [<node.JoinNode object at 0xb752b76c>]
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter TINNER []
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: 0
value:
0.0
key: LINEITEM
value:
LINEITEM.1
key: PART
value:
PART.0
map_output: {u'LINEITEM': [<expression.Column instance at 0xb7503a6c>, <expression.Column instance at 0xb7503e8c>, <expression.Column instance at 0xb7503eac>], u'PART': [<expression.Column instance at 0xb7512b2c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
key: PART
value:
PART.0
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb750562c>, <expression.Column instance at 0xb75055ec>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
pk1_list:
pk2_list:
LINEITEM.1
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb750922c>]
<op.SpjOp object at 0xb750922c> [2, 3, 4, 5, 6, 7]
map:
sp
sp
sp
join
sp
join
reduce:
join
join
CHILD_LIST:  [<op.SpjeOp object at 0xb750594c>]
<op.SpjeOp object at 0xb750594c> [8, 9]
map:
sp
groupby
reduce:
groupby
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- [<node.JoinNode object at 0xb752b76c>]
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter TINNER []
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: 0
value:
0.0
key: LINEITEM
value:
LINEITEM.1
key: PART
value:
PART.0
map_output: {u'LINEITEM': [<expression.Column instance at 0xb7505f0c>, <expression.Column instance at 0xb7505bac>, <expression.Column instance at 0xb7505bec>], u'PART': [<expression.Column instance at 0xb750546c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
key: PART
value:
PART.0
reduce_phase [<node.GroupbyNode object at 0xb753026c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
PartitionKey: LINEITEM 1
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: LINEITEM
value:
LINEITEM.1
map_output: {u'LINEITEM': [<expression.Column instance at 0xb7512a4c>, <expression.Column instance at 0xb751202c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
pk1_list:
pk2_list:
LINEITEM.1
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
pk1_list:
pk2_list:
LINEITEM.1
pk_compare is true!!!!!!!!
use rule 3......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0xb750922c>]
<op.SpjOp object at 0xb750922c> [2, 3, 4, 5, 6, 7]
map:
sp
sp
sp
join
sp
join
reduce:
join
join
CHILD_LIST:  [<op.SpjeOp object at 0xb750556c>]
<op.SpjeOp object at 0xb750556c> [8, 9]
map:
groupby
reduce:
groupby
sp
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.JoinNode object at 0xb752f50c>]
oc_list:---------- [<node.JoinNode object at 0xb752b76c>]
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter TINNER []
join_exp: EQ(LEFT.0,RIGHT.0)
tmp_list:
LEFT.0
RIGHT.0
pk RIGHT.0 False RIGHT RIGHT
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: 0
value:
0.0
key: LINEITEM
value:
LINEITEM.1
key: PART
value:
PART.0
map_output: {u'LINEITEM': [<expression.Column instance at 0xb751266c>, <expression.Column instance at 0xb75129cc>, <expression.Column instance at 0xb7512acc>], u'PART': [<expression.Column instance at 0xb7505f0c>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
key: PART
value:
PART.0
reduce_phase [<node.GroupbyNode object at 0xb753026c>, <node.SPNode object at 0xb753078c>]
ic_list:---------- [<node.SPNode object at 0xb753078c>]
oc_list:---------- [<node.GroupbyNode object at 0xb753026c>]
output_node:------ <node.GroupbyNode object at 0xb753026c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
pk_dic:
key: 0
value:
0.0
map_output: {}
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
pk1_list:
pk2_list:
LINEITEM.1
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
op2:
<op.SpjOp object at 0xb750922c> [2, 3, 4, 5, 6, 7]
map:
sp
sp
sp
join
sp
join
reduce:
join
join
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
pk1_list:
LINEITEM.1
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjeOp object at 0x8cbcd2c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
op2:
<op.SpjOp object at 0xb750922c> [2, 3, 4, 5, 6, 7]
map:
sp
sp
sp
join
sp
join
reduce:
join
join
CHILD_LIST:  [<op.SpjeOp object at 0x8cbcd2c>]
pk1_list:
LINEITEM.1
pk2_list:
LINEITEM.1
PART.0
pk_compare is true!!!!!!!!
use rule 2......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjeOp object at 0xb75054ac>]
<op.SpjeOp object at 0xb75054ac> [2, 3, 4, 5, 6, 7, 8]
map:
groupby
sp
sp
sp
join
sp
join
reduce:
groupby
join
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>, <node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>, <node.JoinNode object at 0xb752f50c>]
oc_list:---------- [<node.JoinNode object at 0xb752b76c>]
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LINEITEM []
pk LINEITEM.0 True LINEITEM 
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: 0
value:
0.0
key: LINEITEM
value:
LINEITEM.1
key: PART
value:
PART.0
map_output: {u'LINEITEM': [<expression.Column instance at 0xb750ddcc>, <expression.Column instance at 0xb750d30c>, <expression.Column instance at 0xb750df8c>], u'PART': [<expression.Column instance at 0xb75152ec>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
key: PART
value:
PART.0
reduce_phase []
ic_list:---------- []
oc_list:---------- []
output_node:------ <node.SPNode object at 0xb753078c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
pk_dic:
key: LINEITEM
value:
map_output: {u'LINEITEM': [<expression.Column instance at 0xb750594c>, <expression.Column instance at 0x8cbc7ac>]}
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x8cbceac> [9]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjeOp object at 0xb75054ac> [2, 3, 4, 5, 6, 7, 8]
map:
groupby
sp
sp
sp
join
sp
join
reduce:
groupby
join
join
CHILD_LIST:  [<op.SpjOp object at 0x8cbceac>]
pk1_list:
pk2_list:
LINEITEM.1
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb746d0cc> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjeOp object at 0xb750562c>]
<op.SpjeOp object at 0xb750562c> [2, 3, 4, 5, 6, 7, 8, 9]
map:
sp
groupby
sp
sp
sp
join
sp
join
reduce:
groupby
join
join
CHILD_LIST:  []
reduce_phase [<node.GroupbyNode object at 0xb7521b2c>]
ic_list:---------- [<node.GroupbyNode object at 0xb7521b2c>]
oc_list:---------- []
output_node:------ <node.GroupbyNode object at 0xb7521b2c>
ismapphasebottom
map_filter TOUTER []
map_filter TINNER []
pk 1
pk_dic:
key: 0
value:
1
map_output: {}
reduce_phase [<node.GroupbyNode object at 0xb753026c>, <node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
ic_list:---------- [<node.GroupbyNode object at 0xb753026c>, <node.JoinNode object at 0xb752f50c>]
oc_list:---------- [<node.JoinNode object at 0xb752b76c>]
output_node:------ <node.JoinNode object at 0xb752b76c>
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
PartitionKey: LINEITEM 1
pk LINEITEM.1 False LINEITEM LINEITEM
ismapphasebottom
map_filter PART []
AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
spnode pkdic--------------
PART
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk PART.0 False PART PART
ismapphasebottom
map_filter LINEITEM []
spnode pkdic--------------
LINEITEM
join_exp: EQ(RIGHT.0,LEFT.1)
tmp_list:
RIGHT.0
LEFT.1
111111111111111
__genOriginalExp__: RIGHT.0 RIGHT 0
new_exp PART.0
111111111111111
__genOriginalExp__: LEFT.1 LEFT 1
new_exp LINEITEM.1
ret_exp_list
pk LINEITEM.1 False LINEITEM LINEITEM
pk_dic:
key: PART
value:
PART.0
key: LINEITEM
value:
LINEITEM.1
map_output: {u'PART': [<expression.Column instance at 0x8cbc70c>], u'LINEITEM': [<expression.Column instance at 0x8cbc92c>, <expression.Column instance at 0x8cbcc6c>, <expression.Column instance at 0x8cbe12c>]}
key: PART
value:
PART.0
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
**************************OP [1]
before
child_list [<op.SpjeOp object at 0xb750562c>]
map_output:
pk_dic:
key: 0
value:
1
for [<expression.Constant instance at 0x8cc3dec>]
1
child_map_phase [<node.SPNode object at 0xb753078c>, <node.GroupbyNode object at 0xb753026c>, <node.SPNode object at 0x8cb990c>, <node.SPNode object at 0xb752f54c>, <node.SPNode object at 0x8cb926c>, <node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>, <node.JoinNode object at 0xb752b76c>]
child_reduce_phase [<node.GroupbyNode object at 0xb753026c>, <node.JoinNode object at 0xb752f50c>, <node.JoinNode object at 0xb752b76c>]
child_node_list [<node.SPNode object at 0xb753078c>, <node.GroupbyNode object at 0xb753026c>, <node.SPNode object at 0x8cb990c>, <node.SPNode object at 0xb752f54c>, <node.SPNode object at 0x8cb926c>, <node.JoinNode object at 0xb752f50c>, <node.SPNode object at 0xb752b7ec>, <node.JoinNode object at 0xb752b76c>]
old_exp 1
old_exp LEFT.2
new_exp testquery2.1
after
map_output:
key: testquery2
value:
testquery2.1
pk_dic:
key: testquery2
value:
1
index_name {0: 'testquery2'}
gen mr key value
1
res: +
gen mr key value
testquery2.1
column_type: DECIMAL
res: Double.parseDouble(line_buf[1])+
map_filter
table_name: testquery2
gb_exp_list
SUM(TOUTER.1)
reduce...... SUM(TOUTER.1)
para <expression.Column instance at 0x8cbe3cc>
**************************OP [2, 3, 4, 5, 6, 7, 8, 9]
before
child_list []
map_output:
key: PART
value:
PART.0
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
pk_dic:
key: PART
value:
PART.0
key: LINEITEM
value:
LINEITEM.1
after
map_output:
key: PART
value:
PART.0
key: LINEITEM
value:
LINEITEM.1
LINEITEM.4
LINEITEM.5
pk_dic:
key: PART
value:
PART.0
key: LINEITEM
value:
LINEITEM.1
index_name {}
gen mr key value
PART.0
column_type: INTEGER
res: Integer.parseInt(line_buf[0])+
gen mr key value
PART.0
column_type: INTEGER
res: Integer.parseInt(line_buf[0])+
map_filter
PART AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
table_name: PART
value line_buf[3].compareTo("BRAND#34") == 0
value line_buf[6].compareTo("MED PACK") == 0
gen mr key value
LINEITEM.1
column_type: INTEGER
res: Integer.parseInt(line_buf[1])+
gen mr key value
LINEITEM.1
column_type: INTEGER
gen mr key value
LINEITEM.4
column_type: DECIMAL
gen mr key value
LINEITEM.5
column_type: DECIMAL
res: Integer.parseInt(line_buf[1])+Double.parseDouble(line_buf[4])+Double.parseDouble(line_buf[5])+
map_filter
PART AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
table_name: LINEITEM
gb_exp_list
AVG(LINEITEM.1)
reduce...... AVG(LINEITEM.1)
para <expression.Column instance at 0xb753036c>
tb_name_tag {u'LINEITEM': 2, u'PART': 1}
gen mr key value
LEFT.0
column_type: INTEGER
gen mr key value
LEFT.1
column_type: DECIMAL
gen mr key value
LEFT.2
column_type: DECIMAL
res: Integer.parseInt(left_buf_1[0])+Double.parseDouble(left_buf_1[1])+Double.parseDouble(left_buf_1[2])+
gen mr key value
1
gen mr key value
LEFT.2
column_type: DECIMAL
res: +Double.parseDouble(left_buf_2[2])+
value Double.parseDouble(left_buf_2[1]) < Double.parseDouble(right_buf_2[1])
END
