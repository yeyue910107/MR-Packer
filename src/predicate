groupby_clause: [<expression.Column instance at 0x1d23dd0>]
table_list [u'LINEITEM'] LINEITEM
table_list [u'PART'] PART
table_list [u'LINEITEM'] LINEITEM
groupby, predicate
<ast.SelectListParser instance at 0x1d23050>
spnode, predicate
[<expression.Function instance at 0x1d38200>] <ast.SelectListParser instance at 0x1d32b00>
tmp_exp AND(EQ(TOUTER.L_PARTKEY,TINNER.LP),LT(TOUTER.L_QUANTITY,TINNER.LQ))
self AND
para_list EQ
self EQ
TOUTER.L_PARTKEY
[u'LINEITEM', u'PART', u'TOUTER', u'TINNER']
tmp_flag is true
TINNER.LP
[u'LINEITEM', u'PART', u'TOUTER', u'TINNER']
tmp_flag is true
exp_flag is  True remove_flag is  True
REMOVE PARA
EQ(TOUTER.L_PARTKEY,TINNER.LP)
AND(EQ(TOUTER.L_PARTKEY,TINNER.LP),LT(TOUTER.L_QUANTITY,TINNER.LQ))
AND(TOUTER.L_PARTKEY,TINNER.LP)
tmp_exp <expression.Function instance at 0x1d36560>
para_list LT
self LT
TOUTER.L_QUANTITY
[u'LINEITEM', u'PART', u'TOUTER', u'TINNER']
tmp_flag is true
TINNER.LQ
[u'LINEITEM', u'PART', u'TOUTER', u'TINNER']
tmp_flag is true
exp_flag is  True remove_flag is  True
REMOVE PARA
LT(TOUTER.L_QUANTITY,TINNER.LQ)
AND(TOUTER.L_PARTKEY,TINNER.LP)
AND(TOUTER.L_QUANTITY,TINNER.LQ)
tmp_exp <expression.Function instance at 0x1d36098>
REMOVE PARA
EQ(TOUTER.L_PARTKEY,TINNER.LP)
AND(EQ(TOUTER.L_PARTKEY,TINNER.LP),LT(TOUTER.L_QUANTITY,TINNER.LQ))
AND(TOUTER.L_PARTKEY,TINNER.LP)
REMOVE PARA
LT(TOUTER.L_QUANTITY,TINNER.LQ)
AND(TOUTER.L_PARTKEY,TINNER.LP)
AND(TOUTER.L_QUANTITY,TINNER.LQ)
child_exp AND(EQ(TOUTER.L_PARTKEY,TINNER.LP),LT(TOUTER.L_QUANTITY,TINNER.LQ))
JoinNode, predicate
self AND
para_list AND
self AND
para_list EQ
self EQ
TOUTER.L_PARTKEY
[u'LINEITEM', u'PART', u'TOUTER']
tmp_flag is true
TINNER.LP
[u'LINEITEM', u'PART', u'TOUTER']
exp_flag is  False remove_flag is  True
tmp_exp None
para_list LT
self LT
TOUTER.L_QUANTITY
[u'LINEITEM', u'PART', u'TOUTER']
tmp_flag is true
TINNER.LQ
[u'LINEITEM', u'PART', u'TOUTER']
exp_flag is  False remove_flag is  True
tmp_exp None
tmp_exp None
para_list AND
self AND
para_list EQ
self EQ
TOUTER.L_PARTKEY
[u'LINEITEM', u'PART', u'TOUTER']
tmp_flag is true
TINNER.LP
[u'LINEITEM', u'PART', u'TOUTER']
exp_flag is  False remove_flag is  True
tmp_exp None
para_list LT
self LT
TOUTER.L_QUANTITY
[u'LINEITEM', u'PART', u'TOUTER']
tmp_flag is true
TINNER.LQ
[u'LINEITEM', u'PART', u'TOUTER']
exp_flag is  False remove_flag is  True
tmp_exp None
tmp_exp None
self AND
para_list AND
self AND
para_list EQ
self EQ
TOUTER.L_PARTKEY
[u'LINEITEM', u'TINNER']
TINNER.LP
[u'LINEITEM', u'TINNER']
tmp_flag is true
exp_flag is  False remove_flag is  True
tmp_exp None
para_list LT
self LT
TOUTER.L_QUANTITY
[u'LINEITEM', u'TINNER']
TINNER.LQ
[u'LINEITEM', u'TINNER']
tmp_flag is true
exp_flag is  False remove_flag is  True
tmp_exp None
tmp_exp None
para_list AND
self AND
para_list EQ
self EQ
TOUTER.L_PARTKEY
[u'LINEITEM', u'TINNER']
TINNER.LP
[u'LINEITEM', u'TINNER']
tmp_flag is true
exp_flag is  False remove_flag is  True
tmp_exp None
para_list LT
self LT
TOUTER.L_QUANTITY
[u'LINEITEM', u'TINNER']
TINNER.LQ
[u'LINEITEM', u'TINNER']
tmp_flag is true
exp_flag is  False remove_flag is  True
tmp_exp None
tmp_exp None
AND(AND(EQ(TOUTER.L_PARTKEY,TINNER.LP),LT(TOUTER.L_QUANTITY,TINNER.LQ)),AND(EQ(TOUTER.L_PARTKEY,TINNER.LP),LT(TOUTER.L_QUANTITY,TINNER.LQ))) None None PREDICATE_PUSHDOWN
REMOVE PARA
EQ(TOUTER.L_PARTKEY,TINNER.LP)
AND(EQ(TOUTER.L_PARTKEY,TINNER.LP),LT(TOUTER.L_QUANTITY,TINNER.LQ))
AND(TOUTER.L_PARTKEY,TINNER.LP)
REMOVE PARA
EQ(TOUTER.L_PARTKEY,TINNER.LP)
AND(EQ(TOUTER.L_PARTKEY,TINNER.LP),LT(TOUTER.L_QUANTITY,TINNER.LQ))
AND(TOUTER.L_PARTKEY,TINNER.LP)
REMOVE PARA
EQ(TOUTER.L_PARTKEY,TINNER.LP)
AND(EQ(TOUTER.L_PARTKEY,TINNER.LP),LT(TOUTER.L_QUANTITY,TINNER.LQ))
AND(TOUTER.L_PARTKEY,TINNER.LP)
REMOVE PARA
EQ(TOUTER.L_PARTKEY,TINNER.LP)
AND(EQ(TOUTER.L_PARTKEY,TINNER.LP),LT(TOUTER.L_QUANTITY,TINNER.LQ))
AND(TOUTER.L_PARTKEY,TINNER.LP)
join_exp:  <expression.Function instance at 0x1d36488>
not none: AND(EQ(TOUTER.L_PARTKEY,TINNER.LP),EQ(TOUTER.L_PARTKEY,TINNER.LP))
spnode, predicate
[<expression.Column instance at 0x1d2aab8>, <expression.Column instance at 0x1d2ab48>, <expression.Column instance at 0x1d2ab90>] <ast.SelectListParser instance at 0x1d2d680>
tmp_exp AND(EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY),EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
self AND
para_list EQ
self EQ
PART.P_PARTKEY
[u'LINEITEM', u'PART', u'TOUTER']
tmp_flag is true
LINEITEM.L_PARTKEY
[u'LINEITEM', u'PART', u'TOUTER']
tmp_flag is true
exp_flag is  True remove_flag is  True
REMOVE PARA
EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY)
AND(EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY),EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
AND(PART.P_PARTKEY,LINEITEM.L_PARTKEY)
tmp_exp <expression.Function instance at 0x1d37bd8>
para_list EQ
self EQ
PART.P_BRAND
[u'LINEITEM', u'PART', u'TOUTER']
tmp_flag is true
"BRAND#34"
exp_flag is  True remove_flag is  True
REMOVE PARA
EQ(PART.P_BRAND,"BRAND#34")
AND(PART.P_PARTKEY,LINEITEM.L_PARTKEY)
AND(PART.P_BRAND,"BRAND#34")
tmp_exp <expression.Function instance at 0x1d37878>
para_list EQ
self EQ
PART.P_CONTAINER
[u'LINEITEM', u'PART', u'TOUTER']
tmp_flag is true
"MED PACK"
exp_flag is  True remove_flag is  True
REMOVE PARA
EQ(PART.P_CONTAINER,"MED PACK")
AND(PART.P_BRAND,"BRAND#34")
AND(PART.P_CONTAINER,"MED PACK")
tmp_exp <expression.Function instance at 0x1d37a70>
REMOVE PARA
EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY)
AND(EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY),EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
AND(PART.P_PARTKEY,LINEITEM.L_PARTKEY)
REMOVE PARA
EQ(PART.P_BRAND,"BRAND#34")
AND(PART.P_PARTKEY,LINEITEM.L_PARTKEY)
AND(PART.P_BRAND,"BRAND#34")
REMOVE PARA
EQ(PART.P_CONTAINER,"MED PACK")
AND(PART.P_BRAND,"BRAND#34")
AND(PART.P_CONTAINER,"MED PACK")
child_exp AND(EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY),EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
JoinNode, predicate
self AND
para_list AND
self AND
para_list EQ
self EQ
PART.P_PARTKEY
[u'LINEITEM']
LINEITEM.L_PARTKEY
[u'LINEITEM']
tmp_flag is true
exp_flag is  False remove_flag is  True
tmp_exp None
para_list EQ
self EQ
PART.P_BRAND
[u'LINEITEM']
"BRAND#34"
exp_flag is  False remove_flag is  True
tmp_exp None
para_list EQ
self EQ
PART.P_CONTAINER
[u'LINEITEM']
"MED PACK"
exp_flag is  False remove_flag is  True
tmp_exp None
tmp_exp None
para_list AND
self AND
para_list EQ
self EQ
PART.P_PARTKEY
[u'LINEITEM']
LINEITEM.L_PARTKEY
[u'LINEITEM']
tmp_flag is true
exp_flag is  False remove_flag is  True
tmp_exp None
para_list EQ
self EQ
PART.P_BRAND
[u'LINEITEM']
"BRAND#34"
exp_flag is  False remove_flag is  True
tmp_exp None
para_list EQ
self EQ
PART.P_CONTAINER
[u'LINEITEM']
"MED PACK"
exp_flag is  False remove_flag is  True
tmp_exp None
tmp_exp None
self AND
para_list AND
self AND
para_list EQ
self EQ
PART.P_PARTKEY
[u'PART']
tmp_flag is true
LINEITEM.L_PARTKEY
[u'PART']
exp_flag is  False remove_flag is  True
tmp_exp None
para_list EQ
self EQ
PART.P_BRAND
[u'PART']
tmp_flag is true
"BRAND#34"
exp_flag is  True remove_flag is  True
REMOVE PARA
EQ(PART.P_BRAND,"BRAND#34")
AND(EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY),EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
AND(PART.P_BRAND,"BRAND#34")
tmp_exp <expression.Function instance at 0x1d384d0>
para_list EQ
self EQ
PART.P_CONTAINER
[u'PART']
tmp_flag is true
"MED PACK"
exp_flag is  True remove_flag is  True
REMOVE PARA
EQ(PART.P_CONTAINER,"MED PACK")
AND(PART.P_BRAND,"BRAND#34")
AND(PART.P_CONTAINER,"MED PACK")
tmp_exp <expression.Function instance at 0x1d38b00>
REMOVE PARA
EQ(PART.P_BRAND,"BRAND#34")
AND(EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY),EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
AND(PART.P_BRAND,"BRAND#34")
REMOVE PARA
EQ(PART.P_CONTAINER,"MED PACK")
AND(PART.P_BRAND,"BRAND#34")
AND(PART.P_CONTAINER,"MED PACK")
tmp_exp <expression.Function instance at 0x1d30cf8>
para_list AND
self AND
para_list EQ
self EQ
PART.P_PARTKEY
[u'PART']
tmp_flag is true
LINEITEM.L_PARTKEY
[u'PART']
exp_flag is  False remove_flag is  True
tmp_exp None
para_list EQ
self EQ
PART.P_BRAND
[u'PART']
tmp_flag is true
"BRAND#34"
exp_flag is  True remove_flag is  True
REMOVE PARA
EQ(PART.P_BRAND,"BRAND#34")
AND(EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY),EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
AND(PART.P_BRAND,"BRAND#34")
tmp_exp <expression.Function instance at 0x1d30e18>
para_list EQ
self EQ
PART.P_CONTAINER
[u'PART']
tmp_flag is true
"MED PACK"
exp_flag is  True remove_flag is  True
REMOVE PARA
EQ(PART.P_CONTAINER,"MED PACK")
AND(PART.P_BRAND,"BRAND#34")
AND(PART.P_CONTAINER,"MED PACK")
tmp_exp <expression.Function instance at 0x1d391b8>
REMOVE PARA
EQ(PART.P_BRAND,"BRAND#34")
AND(EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY),EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
AND(PART.P_BRAND,"BRAND#34")
REMOVE PARA
EQ(PART.P_CONTAINER,"MED PACK")
AND(PART.P_BRAND,"BRAND#34")
AND(PART.P_CONTAINER,"MED PACK")
tmp_exp <expression.Function instance at 0x1d374d0>
REMOVE PARA
AND(EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
AND(EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
REMOVE PARA
AND(EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
AND(EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
AND(AND(PART.P_CONTAINER,"MED PACK"),AND(PART.P_CONTAINER,"MED PACK")) None <expression.Function instance at 0x1d37248> PREDICATE_PUSHDOWN
join_exp:  None
spnode, predicate
[<expression.Column instance at 0x1d2eb90>, <expression.Column instance at 0x1d2ec20>, <expression.Column instance at 0x1d2ec68>] <ast.SelectListParser instance at 0x1d2f320>
tmp_exp AND(EQ(UNKNOWN.P_PARTKEY,LINEITEM.L_PARTKEY),EQ(UNKNOWN.P_BRAND,"BRAND#34"),EQ(UNKNOWN.P_CONTAINER,"MED PACK"))
self AND
para_list EQ
self EQ
UNKNOWN.P_PARTKEY
[u'LINEITEM']
LINEITEM.L_PARTKEY
[u'LINEITEM']
tmp_flag is true
exp_flag is  False remove_flag is  True
tmp_exp None
para_list EQ
self EQ
UNKNOWN.P_BRAND
[u'LINEITEM']
"BRAND#34"
exp_flag is  False remove_flag is  True
tmp_exp None
para_list EQ
self EQ
UNKNOWN.P_CONTAINER
[u'LINEITEM']
"MED PACK"
exp_flag is  False remove_flag is  True
tmp_exp None
spnode, predicate
[<expression.Column instance at 0x1d2b200>, <expression.Column instance at 0x1d2b290>, <expression.Column instance at 0x1d2b2d8>] <ast.SelectListParser instance at 0x1d2b998>
tmp_exp AND(AND(EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK")),AND(EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK")))
self AND
para_list AND
self AND
para_list EQ
self EQ
PART.P_BRAND
[u'PART']
tmp_flag is true
"BRAND#34"
exp_flag is  True remove_flag is  True
REMOVE PARA
EQ(PART.P_BRAND,"BRAND#34")
AND(EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
AND(PART.P_BRAND,"BRAND#34")
tmp_exp <expression.Function instance at 0x1d2fb90>
para_list EQ
self EQ
PART.P_CONTAINER
[u'PART']
tmp_flag is true
"MED PACK"
exp_flag is  True remove_flag is  True
REMOVE PARA
EQ(PART.P_CONTAINER,"MED PACK")
AND(PART.P_BRAND,"BRAND#34")
AND(PART.P_CONTAINER,"MED PACK")
tmp_exp <expression.Function instance at 0x1d3a7e8>
REMOVE PARA
EQ(PART.P_BRAND,"BRAND#34")
AND(EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
AND(PART.P_BRAND,"BRAND#34")
REMOVE PARA
EQ(PART.P_CONTAINER,"MED PACK")
AND(PART.P_BRAND,"BRAND#34")
AND(PART.P_CONTAINER,"MED PACK")
tmp_exp <expression.Function instance at 0x1d2f5f0>
para_list AND
self AND
para_list EQ
self EQ
PART.P_BRAND
[u'PART']
tmp_flag is true
"BRAND#34"
exp_flag is  True remove_flag is  True
REMOVE PARA
EQ(PART.P_BRAND,"BRAND#34")
AND(EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
AND(PART.P_BRAND,"BRAND#34")
tmp_exp <expression.Function instance at 0x1d2f440>
para_list EQ
self EQ
PART.P_CONTAINER
[u'PART']
tmp_flag is true
"MED PACK"
exp_flag is  True remove_flag is  True
REMOVE PARA
EQ(PART.P_CONTAINER,"MED PACK")
AND(PART.P_BRAND,"BRAND#34")
AND(PART.P_CONTAINER,"MED PACK")
tmp_exp <expression.Function instance at 0x1d3a128>
REMOVE PARA
EQ(PART.P_BRAND,"BRAND#34")
AND(EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
AND(PART.P_BRAND,"BRAND#34")
REMOVE PARA
EQ(PART.P_CONTAINER,"MED PACK")
AND(PART.P_BRAND,"BRAND#34")
AND(PART.P_CONTAINER,"MED PACK")
tmp_exp <expression.Function instance at 0x1d2f9e0>
REMOVE PARA
AND(EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
AND(EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
REMOVE PARA
AND(EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
AND(EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
child_exp AND(AND(EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK")),AND(EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK")))
groupby, predicate
<ast.SelectListParser instance at 0x1d31f38>
spnode, predicate
[<expression.Column instance at 0x1d31f80>, <expression.Function instance at 0x1d32050>] <ast.SelectListParser instance at 0x1d32ab8>
GroupbyNode, PK_LIST: [[<expression.Constant instance at 0x1d25dd0>], [<expression.Constant instance at 0x1d25dd0>]]
tmp_list: TOUTER TINNER
__genOriginalExp__: TOUTER L_PARTKEY
