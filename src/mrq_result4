table_list [u'LINEITEM']
table_list [u'PART']
table_list [u'LINEITEM']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TOUTER L_PARTKEY
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TINNER LP
[u'LP', u'LQ']
TOUTER L_QUANTITY
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TINNER LQ
[u'LP', u'LQ']
TOUTER L_PARTKEY
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TINNER LP
[u'LP', u'LQ']
TOUTER L_QUANTITY
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TINNER LQ
[u'LP', u'LQ']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
groupby, predicate
<ast.SelectListParser instance at 0x9cd38ac>
JoinNode, predicate
self AND
para_list EQ
self EQ
TOUTER.L_PARTKEY
[u'TOUTER']
tmp_flag is true
TINNER.LP
[u'TOUTER']
exp_flag is  False remove_flag is  True
tmp_exp None
para_list LT
self LT
TOUTER.L_QUANTITY
[u'TOUTER']
tmp_flag is true
TINNER.LQ
[u'TOUTER']
exp_flag is  False remove_flag is  True
tmp_exp None
self AND
para_list EQ
self EQ
TOUTER.L_PARTKEY
[u'TINNER']
TINNER.LP
[u'TINNER']
tmp_flag is true
exp_flag is  False remove_flag is  True
tmp_exp None
para_list LT
self LT
TOUTER.L_QUANTITY
[u'TINNER']
TINNER.LQ
[u'TINNER']
tmp_flag is true
exp_flag is  False remove_flag is  True
tmp_exp None
AND(EQ(TOUTER.L_PARTKEY,TINNER.LP),LT(TOUTER.L_QUANTITY,TINNER.LQ)) None None PREDICATE_PUSHDOWN
REMOVE PARA
EQ(TOUTER.L_PARTKEY,TINNER.LP)
AND(EQ(TOUTER.L_PARTKEY,TINNER.LP),LT(TOUTER.L_QUANTITY,TINNER.LQ))
join_exp not none: EQ(TOUTER.L_PARTKEY,TINNER.LP)
exp: AND(LT(TOUTER.L_QUANTITY,TINNER.LQ))
spnode, predicate
JoinNode, predicate
self AND
para_list EQ
self EQ
PART.P_PARTKEY
[u'LINEITEM']
LINEITEM.L_PARTKEY
[u'LINEITEM']
tmp_flag is true
exp_flag is  False remove_flag is  True
tmp_exp None
para_list EQ
self EQ
PART.P_BRAND
[u'LINEITEM']
"BRAND#34"
exp_flag is  False remove_flag is  True
tmp_exp None
para_list EQ
self EQ
PART.P_CONTAINER
[u'LINEITEM']
"MED PACK"
exp_flag is  False remove_flag is  True
tmp_exp None
self AND
para_list EQ
self EQ
PART.P_PARTKEY
[u'PART']
tmp_flag is true
LINEITEM.L_PARTKEY
[u'PART']
exp_flag is  False remove_flag is  True
tmp_exp None
para_list EQ
self EQ
PART.P_BRAND
[u'PART']
tmp_flag is true
"BRAND#34"
exp_flag is  True remove_flag is  True
REMOVE PARA
EQ(PART.P_BRAND,"BRAND#34")
AND(EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY),EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
tmp_exp <expression.Function instance at 0x9d2da8c>
para_list EQ
self EQ
PART.P_CONTAINER
[u'PART']
tmp_flag is true
"MED PACK"
exp_flag is  True remove_flag is  True
REMOVE PARA
EQ(PART.P_CONTAINER,"MED PACK")
AND(EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY),EQ(PART.P_CONTAINER,"MED PACK"))
tmp_exp <expression.Function instance at 0x9d2d66c>
REMOVE PARA
EQ(PART.P_BRAND,"BRAND#34")
AND(EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY),EQ(PART.P_BRAND,"BRAND#34"),EQ(PART.P_CONTAINER,"MED PACK"))
REMOVE PARA
EQ(PART.P_CONTAINER,"MED PACK")
AND(EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY),EQ(PART.P_CONTAINER,"MED PACK"))
AND(EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY)) None <expression.Function instance at 0x9d2da4c> PREDICATE_PUSHDOWN
REMOVE PARA
EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY)
AND(EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY))
join_exp not none: EQ(PART.P_PARTKEY,LINEITEM.L_PARTKEY)
exp: AND()
spnode, predicate
spnode, predicate
spnode, predicate
groupby, predicate
<ast.SelectListParser instance at 0x9ce0eec>
spnode, predicate
groupby filter
child columnfilter: 1
child columnfilter: TOUTER.L_EXTENDEDPRICE
[u'TOUTER'] {}
TOUTER.L_EXTENDEDPRICE
add to select list:
TOUTER.L_EXTENDEDPRICE
TOUTER.L_QUANTITY
TOUTER.L_PARTKEY
child columnfilter: 1
child columnfilter: TOUTER.L_EXTENDEDPRICE
[u'TINNER'] {}
add to select list:
TINNER.LQ
TINNER.LP
sp column filter
LINEITEM.L_EXTENDEDPRICE
LINEITEM.L_QUANTITY
LINEITEM.L_PARTKEY
child columnfilter: LINEITEM.L_EXTENDEDPRICE
[u'LINEITEM'] {}
child columnfilter: LINEITEM.L_QUANTITY
[u'LINEITEM'] {}
child columnfilter: LINEITEM.L_PARTKEY
[u'LINEITEM'] {}
LINEITEM.L_EXTENDEDPRICE
LINEITEM.L_QUANTITY
LINEITEM.L_PARTKEY
add to select list:
LINEITEM.L_EXTENDEDPRICE
LINEITEM.L_QUANTITY
LINEITEM.L_PARTKEY
child columnfilter: LINEITEM.L_EXTENDEDPRICE
[u'PART'] {}
child columnfilter: LINEITEM.L_QUANTITY
[u'PART'] {}
child columnfilter: LINEITEM.L_PARTKEY
[u'PART'] {}
add to select list:
PART.P_PARTKEY
sp column filter
sp column filter
sp column filter
MULTIPLY(0.2,AVG(LINEITEM.L_QUANTITY))
LINEITEM.L_PARTKEY
groupby filter
sp column filter
TOUTER L_EXTENDEDPRICE
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TOUTER L_EXTENDEDPRICE
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TOUTER L_QUANTITY
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TINNER LQ
[u'LP', u'LQ']
TOUTER L_PARTKEY
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TINNER LP
[u'LP', u'LQ']
TOUTER L_PARTKEY
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TOUTER L_QUANTITY
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
TOUTER L_EXTENDEDPRICE
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
LINEITEM L_PARTKEY
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
LINEITEM L_QUANTITY
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
LINEITEM L_EXTENDEDPRICE
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
PART P_PARTKEY
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
LINEITEM L_PARTKEY
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
LINEITEM L_QUANTITY
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
LINEITEM L_PARTKEY
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
LINEITEM L_EXTENDEDPRICE
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
PART P_PARTKEY
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
PART P_BRAND
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
PART P_CONTAINER
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
TINNER LP
[u'LP', u'LQ']
TINNER LQ
[u'LP', u'LQ']
LINEITEM L_PARTKEY
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
LINEITEM L_QUANTITY
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
LINEITEM L_PARTKEY
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
LINEITEM L_QUANTITY
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
LINEITEM L_PARTKEY
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
CHILD: <node.SPNode object at 0x9cd3b8c> <node.JoinNode object at 0x9cda8ac>
CHILD: <node.SPNode object at 0x9ce0cac> <node.GroupbyNode object at 0x9ce560c>
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
[u'L_PARTKEY', u'L_QUANTITY', u'L_EXTENDEDPRICE']
CHILD: <node.SPNode object at 0x9ce060c> <node.TableNode object at 0x9ce06ac>
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
CHILD_NAME
CHILD_NAME LEFT
CHILD: <node.SPNode object at 0x9cda8ec> <node.TableNode object at 0x9cda98c>
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
CHILD_NAME
CHILD_NAME RIGHT
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
['P_PARTKEY', 'P_NAME', 'P_MFGR', 'P_BRAND', 'P_TYPE', 'P_SIZE', 'P_CONTAINER', 'P_RETAILPRICE', 'P_COMMENT']
[u'LP', u'LQ']
[u'LP', u'LQ']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'L_LINENUMBER', 'L_QUANTITY', 'L_EXTENDEDPRICE', 'L_DISCOUNT', 'L_TAX', 'L_RETURNFLAG', 'L_LINESTATUS', 'L_SHIPDATE', 'L_COMMITDATE', 'L_RECEIPTDATE', 'L_SHIPINSTRUCT', 'L_SHIPMODE', 'L_COMMENT']
GroupbyNode:----------
select_list:
exp_list: 
DIVIDE(SUM(TOUTER.1),7.0)
exp_alias_dic: 
DIVIDE(SUM(TOUTER.1),7.0) : AVG_YEARLY
table_list:  [u'TOUTER', u'TINNER'] table_alias_dic:  {}
groupby_list: 
1
JoinNode:----------
select_list:
exp_list: 
1
LEFT.0
exp_alias_dic: 
1 : None
LEFT.0 : None
where_condition:  AND(LT(LEFT.1,RIGHT.0))
table_list:  ['LEFT', 'RIGHT'] table_alias_dic:  {}
is_explicit:  False join_type:  None
where_condition:  EQ(LEFT.2,RIGHT.1)
left_child:
SPNode:----------
select_list:
exp_list: 
TOUTER.2
TOUTER.1
TOUTER.0
exp_alias_dic: 
TOUTER.1 : None
TOUTER.2 : None
TOUTER.0 : None
table_list:  [u'TOUTER'] table_alias_dic:  {}
JoinNode:----------
select_list:
exp_list: 
LEFT.0
LEFT.1
LEFT.2
exp_alias_dic: 
LEFT.2 : L_PARTKEY
LEFT.1 : L_QUANTITY
LEFT.0 : L_EXTENDEDPRICE
table_list:  ['LEFT', 'RIGHT'] table_alias_dic:  {}
is_explicit:  False join_type:  None
where_condition:  EQ(RIGHT.0,LEFT.1)
left_child:
SPNode:----------
select_list:
exp_list: 
LINEITEM.5
LINEITEM.4
LINEITEM.1
exp_alias_dic: 
LINEITEM.5 : L_EXTENDEDPRICE
LINEITEM.4 : L_QUANTITY
LINEITEM.1 : L_PARTKEY
table_list:  [u'LINEITEM'] table_alias_dic:  {}
TableNode:----------
select_list:
exp_list: 
exp_alias_dic: 
table_list:  [u'LINEITEM'] table_alias_dic:  {}
table_name:  LINEITEM table_alias:  
right_child:
SPNode:----------
select_list:
exp_list: 
PART.0
exp_alias_dic: 
PART.0 : None
where_condition:  AND(EQ(PART.3,"BRAND#34"),EQ(PART.6,"MED PACK"))
table_list:  [u'PART'] table_alias_dic:  {}
TableNode:----------
select_list:
exp_list: 
exp_alias_dic: 
table_list:  [u'PART'] table_alias_dic:  {}
table_name:  PART table_alias:  
right_child:
SPNode:----------
select_list:
exp_list: 
TINNER.1
TINNER.0
exp_alias_dic: 
TINNER.1 : None
TINNER.0 : None
table_list:  [u'TINNER'] table_alias_dic:  {}
GroupbyNode:----------
select_list:
exp_list: 
MULTIPLY(0.2,AVG(LINEITEM.1))
LINEITEM.0
exp_alias_dic: 
LINEITEM.0 : LP
MULTIPLY(0.2,AVG(LINEITEM.1)) : None
table_list:  [u'LINEITEM'] table_alias_dic:  {}
groupby_list: 
LINEITEM.0
SPNode:----------
select_list:
exp_list: 
LINEITEM.1
LINEITEM.4
exp_alias_dic: 
LINEITEM.4 : None
LINEITEM.1 : None
table_list:  [u'LINEITEM'] table_alias_dic:  {}
TableNode:----------
select_list:
exp_list: 
exp_alias_dic: 
table_list:  [u'LINEITEM'] table_alias_dic:  {}
table_name:  LINEITEM table_alias:  
GroupbyNode, PK_LIST:
1
tmp_list: LEFT RIGHT
__genOriginalExp__: LEFT 2
__genOriginalExp__: LEFT 0
__genOriginalExp__: RIGHT 1
JoinNode, PK_LIST:
LINEITEM.5
MULTIPLY(0.2,AVG(LINEITEM.1))
tmp_list: RIGHT LEFT
__genOriginalExp__: RIGHT 0
__genOriginalExp__: LEFT 1
SPNode, PK_LIST:
PART.0
LINEITEM.1
tmp_list: RIGHT LEFT
__genOriginalExp__: RIGHT 0
__genOriginalExp__: LEFT 1
JoinNode, PK_LIST:
PART.0
LINEITEM.1
SPNode, PK_LIST:
SPNode, PK_LIST:
PartitionKey: LINEITEM 1
SPNode, PK_LIST:
LINEITEM.1
PartitionKey: LINEITEM 1
GroupbyNode, PK_LIST:
LINEITEM.1
SPNode, PK_LIST:
check rule:******
op1:
<op.SpjOp object at 0x9ce6a4c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x9cc7a0c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x9ce6a4c>, <op.SpjOp object at 0x9ce66cc>]
pk1_list:
pk2_list:
PART.0
LINEITEM.1
pk_compare is true!!!!!!!!
use rule 1......
check rule:******
op1:
<op.SpjOp object at 0x9ce66cc> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x9ce60cc> [4, 5]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x9ce66cc>]
pk1_list:
pk2_list:
pk_compare is true!!!!!!!!
use rule 1......
check rule:******
op1:
<op.SpjOp object at 0x9ce66cc> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x9cc7a0c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x9ce6a4c>, <op.SpjOp object at 0x9ce66cc>]
pk1_list:
pk2_list:
PART.0
LINEITEM.1
pk_compare is true!!!!!!!!
use rule 1......
check rule:******
op1:
<op.SpjOp object at 0x9ce6a4c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x9ce620c> [4, 6]
map:
sp
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x9ce6a4c>]
pk1_list:
pk2_list:
pk_compare is true!!!!!!!!
use rule 1......
check rule:******
op1:
<op.SpjOp object at 0x9cc7a0c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x9ce6a4c>, <op.SpjOp object at 0x9ce66cc>]
op2:
<op.SpjOp object at 0x9cca52c> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0x9cc7a0c>]
pk1_list:
PART.0
LINEITEM.1
pk2_list:
PART.0
LINEITEM.1
pk_compare is true!!!!!!!!
use rule 1......
check rule:******
op1:
<op.SpjOp object at 0x9ce6a4c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x9ce60cc> [3, 4]
map:
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x9ce6a4c>, <op.SpjOp object at 0x9ce66cc>]
pk1_list:
pk2_list:
pk_compare is true!!!!!!!!
use rule 1......
check rule:******
op1:
<op.SpjOp object at 0x9ce66cc> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x9ce60ac> [3, 4, 5]
map:
sp
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x9ce66cc>]
pk1_list:
pk2_list:
pk_compare is true!!!!!!!!
use rule 1......
check rule:******
op1:
<op.SpjOp object at 0x9ce66cc> [6]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x9ce60cc> [3, 4]
map:
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x9ce6a4c>, <op.SpjOp object at 0x9ce66cc>]
pk1_list:
pk2_list:
pk_compare is true!!!!!!!!
use rule 1......
check rule:******
op1:
<op.SpjOp object at 0x9ce6a4c> [5]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjOp object at 0x9ce62ec> [3, 4, 6]
map:
sp
join
sp
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x9ce6a4c>]
pk1_list:
pk2_list:
pk_compare is true!!!!!!!!
use rule 1......
check rule:******
op1:
<op.SpjOp object at 0x9cca52c> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0x9cc7a0c>]
op2:
<op.SpjOp object at 0x9cc79ac> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x9cca52c>, <op.SpjOp object at 0x9ce678c>]
pk1_list:
PART.0
LINEITEM.1
pk2_list:
LINEITEM.5
MULTIPLY(0.2,AVG(LINEITEM.1))
FINDROOT_BEGIN
<op.SpjeOp object at 0xb731332c> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x9cc79ac>]
<op.SpjOp object at 0x9cc79ac> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x9cca52c>, <op.SpjOp object at 0x9ce678c>]
<op.SpjOp object at 0x9cca52c> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0x9cc7a0c>]
<op.SpjOp object at 0x9cc7a0c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x9ce6a4c>, <op.SpjOp object at 0x9ce66cc>]
<op.SpjOp object at 0x9ce6a4c> [5]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x9ce66cc> [6]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x9ce678c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x9ce632c>]
<op.SpjeOp object at 0x9ce632c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x9ce644c>]
<op.SpjOp object at 0x9ce644c> [9]
map:
sp
reduce:
CHILD_LIST:  []
FINDROOT_END
check rule:******
op1:
<op.SpjOp object at 0x9ce644c> [9]
map:
sp
reduce:
CHILD_LIST:  []
op2:
<op.SpjeOp object at 0x9ce632c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x9ce644c>]
pk1_list:
pk2_list:
LINEITEM.1
pk_compare is true!!!!!!!!
use rule 1......
FINDROOT_BEGIN
<op.SpjeOp object at 0xb731332c> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x9cc79ac>]
<op.SpjOp object at 0x9cc79ac> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x9cca52c>, <op.SpjOp object at 0x9ce678c>]
<op.SpjOp object at 0x9cca52c> [3]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjOp object at 0x9cc7a0c>]
<op.SpjOp object at 0x9cc7a0c> [4]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x9ce6a4c>, <op.SpjOp object at 0x9ce66cc>]
<op.SpjOp object at 0x9ce6a4c> [5]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x9ce66cc> [6]
map:
sp
reduce:
CHILD_LIST:  []
<op.SpjOp object at 0x9ce678c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x9ce626c>]
<op.SpjeOp object at 0x9ce626c> [8, 9]
map:
sp
groupby
reduce:
groupby
CHILD_LIST:  []
FINDROOT_END
check rule:******
op1:
<op.SpjeOp object at 0x9ce632c> [8]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x9ce644c>]
op2:
<op.SpjOp object at 0x9ce678c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x9ce632c>]
pk1_list:
LINEITEM.1
pk2_list:
LINEITEM.1
pk_compare is true!!!!!!!!
check rule:******
op1:
<op.SpjOp object at 0x9ce678c> [7]
map:
sp
reduce:
CHILD_LIST:  [<op.SpjeOp object at 0x9ce632c>]
op2:
<op.SpjOp object at 0x9cc79ac> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x9cca52c>, <op.SpjOp object at 0x9ce678c>]
pk1_list:
LINEITEM.1
pk2_list:
LINEITEM.5
MULTIPLY(0.2,AVG(LINEITEM.1))
check rule:******
op1:
<op.SpjOp object at 0x9cc79ac> [2]
map:
join
reduce:
join
CHILD_LIST:  [<op.SpjOp object at 0x9cca52c>, <op.SpjOp object at 0x9ce678c>]
op2:
<op.SpjeOp object at 0xb731332c> [1]
map:
groupby
reduce:
groupby
CHILD_LIST:  [<op.SpjOp object at 0x9cc79ac>]
pk1_list:
LINEITEM.5
MULTIPLY(0.2,AVG(LINEITEM.1))
pk2_list:
1
